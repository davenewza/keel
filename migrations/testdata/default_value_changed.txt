enum Planets {
    Mercury
    Venus
    Earth
}

model Defaults {
    fields {
        textChanged Text @default("foo")
        textNoChange Text @default("foo")
        textRemoved Text @default("foo")
        numberChanged Number @default(100)
        numberNoChange Number @default(100)
        numberRemoved Number @default(100)
        boolChanged Boolean @default(true)
        boolNoChange Boolean @default(true)
        boolRemoved Boolean @default(true)
        enumChanged Planets @default(Planets.Mercury)
        enumNoChange Planets @default(Planets.Mercury)
        enumRemoved Planets @default(Planets.Venus)
    }
}

===

enum Planets {
    Mercury
    Venus
    Earth
}

model Defaults {
    fields {
        textChanged Text @default("bar")
        textNoChange Text @default("foo")
        textRemoved Text
        numberChanged Number @default(42)
        numberNoChange Number @default(100)
        numberRemoved Number
        boolChanged Boolean @default(false)
        boolNoChange Boolean @default(true)
        boolRemoved Boolean
        enumChanged Planets @default(Planets.Earth)
        enumNoChange Planets @default(Planets.Mercury)
        enumRemoved Planets
    }
}

===

ALTER TABLE "defaults" ALTER COLUMN "text_changed" SET DEFAULT 'bar';
ALTER TABLE "defaults" ALTER COLUMN "text_removed" DROP DEFAULT;
ALTER TABLE "defaults" ALTER COLUMN "number_changed" SET DEFAULT 42;
ALTER TABLE "defaults" ALTER COLUMN "number_removed" DROP DEFAULT;
ALTER TABLE "defaults" ALTER COLUMN "bool_changed" SET DEFAULT false;
ALTER TABLE "defaults" ALTER COLUMN "bool_removed" DROP DEFAULT;
ALTER TABLE "defaults" ALTER COLUMN "enum_changed" SET DEFAULT 'Earth';
ALTER TABLE "defaults" ALTER COLUMN "enum_removed" DROP DEFAULT;
DROP TRIGGER IF EXISTS defaults_create on "defaults";
CREATE TRIGGER defaults_create AFTER INSERT ON "defaults" REFERENCING NEW TABLE AS new_table FOR EACH STATEMENT EXECUTE PROCEDURE process_audit(); 
DROP TRIGGER IF EXISTS defaults_update on "defaults";
CREATE TRIGGER defaults_update AFTER UPDATE ON "defaults" REFERENCING NEW TABLE AS new_table OLD TABLE AS old_table FOR EACH STATEMENT EXECUTE PROCEDURE process_audit(); 
DROP TRIGGER IF EXISTS defaults_delete on "defaults";
CREATE TRIGGER defaults_delete AFTER DELETE ON "defaults" REFERENCING OLD TABLE AS old_table FOR EACH STATEMENT EXECUTE PROCEDURE process_audit(); 
DROP TRIGGER IF EXISTS identity_create on "identity";
CREATE TRIGGER identity_create AFTER INSERT ON "identity" REFERENCING NEW TABLE AS new_table FOR EACH STATEMENT EXECUTE PROCEDURE process_audit(); 
DROP TRIGGER IF EXISTS identity_update on "identity";
CREATE TRIGGER identity_update AFTER UPDATE ON "identity" REFERENCING NEW TABLE AS new_table OLD TABLE AS old_table FOR EACH STATEMENT EXECUTE PROCEDURE process_audit(); 
DROP TRIGGER IF EXISTS identity_delete on "identity";
CREATE TRIGGER identity_delete AFTER DELETE ON "identity" REFERENCING OLD TABLE AS old_table FOR EACH STATEMENT EXECUTE PROCEDURE process_audit();

=== 

[
  { "Model": "Defaults", "Field": "textChanged", "Type": "MODIFIED" },
  { "Model": "Defaults", "Field": "textRemoved", "Type": "MODIFIED" },
  { "Model": "Defaults", "Field": "numberChanged", "Type": "MODIFIED" },
  { "Model": "Defaults", "Field": "numberRemoved", "Type": "MODIFIED" },
  { "Model": "Defaults", "Field": "boolChanged", "Type": "MODIFIED" },
  { "Model": "Defaults", "Field": "boolRemoved", "Type": "MODIFIED" },
  { "Model": "Defaults", "Field": "enumChanged", "Type": "MODIFIED" },
  { "Model": "Defaults", "Field": "enumRemoved", "Type": "MODIFIED" }
]

