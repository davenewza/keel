model Item {
    fields {
        price Decimal
        quantity Number
        total Decimal @computed(item.quantity * item.price)
    }
}

===

model Item {
    fields {
        price Decimal
        quantity Number
        newTotal Decimal @computed(item.quantity * item.price)
    }
}

===

ALTER TABLE "item" ADD COLUMN "new_total" NUMERIC NOT NULL;
ALTER TABLE "item" DROP COLUMN "total" CASCADE;
CREATE FUNCTION "item__new_total__0614a79a__comp"(r "item") RETURNS NUMERIC AS $$ BEGIN
	RETURN r."quantity" * r."price";
END; $$ LANGUAGE plpgsql;
DROP FUNCTION "item__total__0614a79a__comp";
CREATE OR REPLACE FUNCTION "item__exec_comp_fns"() RETURNS TRIGGER AS $$ BEGIN
	NEW.new_total := item__new_total__0614a79a__comp(NEW);
	RETURN NEW;
END; $$ LANGUAGE plpgsql;
CREATE OR REPLACE TRIGGER "item__comp" BEFORE INSERT OR UPDATE ON "item" FOR EACH ROW EXECUTE PROCEDURE "item__exec_comp_fns"();
UPDATE "item" SET id = id;

===

[
    {"Model":"Item","Field":"newTotal","Type":"ADDED"},
    {"Model":"Item","Field":"total","Type":"REMOVED"}
]
