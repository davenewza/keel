// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: proto/schema.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApiType int32

const (
	ApiType_API_TYPE_UNKNOWN ApiType = 0
	ApiType_API_TYPE_GRAPHQL ApiType = 1
	ApiType_API_TYPE_RPC     ApiType = 2
)

// Enum value maps for ApiType.
var (
	ApiType_name = map[int32]string{
		0: "API_TYPE_UNKNOWN",
		1: "API_TYPE_GRAPHQL",
		2: "API_TYPE_RPC",
	}
	ApiType_value = map[string]int32{
		"API_TYPE_UNKNOWN": 0,
		"API_TYPE_GRAPHQL": 1,
		"API_TYPE_RPC":     2,
	}
)

func (x ApiType) Enum() *ApiType {
	p := new(ApiType)
	*p = x
	return p
}

func (x ApiType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApiType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_schema_proto_enumTypes[0].Descriptor()
}

func (ApiType) Type() protoreflect.EnumType {
	return &file_proto_schema_proto_enumTypes[0]
}

func (x ApiType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApiType.Descriptor instead.
func (ApiType) EnumDescriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{0}
}

type OperationInputType int32

const (
	OperationInputType_OPERATION_INPUT_TYPE_UNKNOWN OperationInputType = 0
	// Means the input maps directly to a field on a model
	OperationInputType_OPERATION_INPUT_TYPE_FIELD  OperationInputType = 1
	OperationInputType_OPERATION_INPUT_TYPE_STRING OperationInputType = 2
	OperationInputType_OPERATION_INPUT_TYPE_BOOL   OperationInputType = 3 // etc...
)

// Enum value maps for OperationInputType.
var (
	OperationInputType_name = map[int32]string{
		0: "OPERATION_INPUT_TYPE_UNKNOWN",
		1: "OPERATION_INPUT_TYPE_FIELD",
		2: "OPERATION_INPUT_TYPE_STRING",
		3: "OPERATION_INPUT_TYPE_BOOL",
	}
	OperationInputType_value = map[string]int32{
		"OPERATION_INPUT_TYPE_UNKNOWN": 0,
		"OPERATION_INPUT_TYPE_FIELD":   1,
		"OPERATION_INPUT_TYPE_STRING":  2,
		"OPERATION_INPUT_TYPE_BOOL":    3,
	}
)

func (x OperationInputType) Enum() *OperationInputType {
	p := new(OperationInputType)
	*p = x
	return p
}

func (x OperationInputType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationInputType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_schema_proto_enumTypes[1].Descriptor()
}

func (OperationInputType) Type() protoreflect.EnumType {
	return &file_proto_schema_proto_enumTypes[1]
}

func (x OperationInputType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationInputType.Descriptor instead.
func (OperationInputType) EnumDescriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{1}
}

type OperationImplementation int32

const (
	OperationImplementation_OPERATION_IMPLEMENTATION_UNKNOWN OperationImplementation = 0
	// Auto means the implementation of the operation is generated by Keel.
	OperationImplementation_OPERATION_IMPLEMENTATION_AUTO OperationImplementation = 1
	// Custom means the implementation of the operation is provided via custom code.
	// The code itself is not represented in this proto schema.
	OperationImplementation_OPERATION_IMPLEMENTATION_CUSTOM OperationImplementation = 2
)

// Enum value maps for OperationImplementation.
var (
	OperationImplementation_name = map[int32]string{
		0: "OPERATION_IMPLEMENTATION_UNKNOWN",
		1: "OPERATION_IMPLEMENTATION_AUTO",
		2: "OPERATION_IMPLEMENTATION_CUSTOM",
	}
	OperationImplementation_value = map[string]int32{
		"OPERATION_IMPLEMENTATION_UNKNOWN": 0,
		"OPERATION_IMPLEMENTATION_AUTO":    1,
		"OPERATION_IMPLEMENTATION_CUSTOM":  2,
	}
)

func (x OperationImplementation) Enum() *OperationImplementation {
	p := new(OperationImplementation)
	*p = x
	return p
}

func (x OperationImplementation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationImplementation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_schema_proto_enumTypes[2].Descriptor()
}

func (OperationImplementation) Type() protoreflect.EnumType {
	return &file_proto_schema_proto_enumTypes[2]
}

func (x OperationImplementation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationImplementation.Descriptor instead.
func (OperationImplementation) EnumDescriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{2}
}

type OperationType int32

const (
	OperationType_OPERATION_TYPE_UNKNOWN OperationType = 0
	// Creates a new record and returns it
	OperationType_OPERATION_TYPE_CREATE OperationType = 1
	// Returns a single record by looking up on a unique field
	OperationType_OPERATION_TYPE_GET OperationType = 2
	// Lists records optionally filtering on certain fields. The response would be a
	// an object that supports pagination functionality and contains a "page" of results.
	OperationType_OPERATION_TYPE_LIST OperationType = 3
	// Update a single record by providing a unique lookup and some fields to update.
	// The resulting record is returned.
	OperationType_OPERATION_TYPE_UPDATE OperationType = 4
	// Delete a record and returns it's ID
	OperationType_OPERATION_TYPE_DELETE OperationType = 5
)

// Enum value maps for OperationType.
var (
	OperationType_name = map[int32]string{
		0: "OPERATION_TYPE_UNKNOWN",
		1: "OPERATION_TYPE_CREATE",
		2: "OPERATION_TYPE_GET",
		3: "OPERATION_TYPE_LIST",
		4: "OPERATION_TYPE_UPDATE",
		5: "OPERATION_TYPE_DELETE",
	}
	OperationType_value = map[string]int32{
		"OPERATION_TYPE_UNKNOWN": 0,
		"OPERATION_TYPE_CREATE":  1,
		"OPERATION_TYPE_GET":     2,
		"OPERATION_TYPE_LIST":    3,
		"OPERATION_TYPE_UPDATE":  4,
		"OPERATION_TYPE_DELETE":  5,
	}
)

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}

func (x OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_schema_proto_enumTypes[3].Descriptor()
}

func (OperationType) Type() protoreflect.EnumType {
	return &file_proto_schema_proto_enumTypes[3]
}

func (x OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationType.Descriptor instead.
func (OperationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{3}
}

type FieldType int32

const (
	FieldType_FIELD_TYPE_UNKNOWN      FieldType = 0
	FieldType_FIELD_TYPE_STRING       FieldType = 1
	FieldType_FIELD_TYPE_BOOL         FieldType = 2
	FieldType_FIELD_TYPE_INT          FieldType = 3
	FieldType_FIELD_TYPE_TIMESTAMP    FieldType = 4
	FieldType_FIELD_TYPE_DATE         FieldType = 5
	FieldType_FIELD_TYPE_ID           FieldType = 6
	FieldType_FIELD_TYPE_RELATIONSHIP FieldType = 7
	FieldType_FIELD_TYPE_CURRENCY     FieldType = 8
	FieldType_FIELD_TYPE_DATETIME     FieldType = 9
	FieldType_FIELD_TYPE_ENUM         FieldType = 10
	FieldType_FIELD_TYPE_IDENTITY     FieldType = 11
	FieldType_FIELD_TYPE_IMAGE        FieldType = 12
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0:  "FIELD_TYPE_UNKNOWN",
		1:  "FIELD_TYPE_STRING",
		2:  "FIELD_TYPE_BOOL",
		3:  "FIELD_TYPE_INT",
		4:  "FIELD_TYPE_TIMESTAMP",
		5:  "FIELD_TYPE_DATE",
		6:  "FIELD_TYPE_ID",
		7:  "FIELD_TYPE_RELATIONSHIP",
		8:  "FIELD_TYPE_CURRENCY",
		9:  "FIELD_TYPE_DATETIME",
		10: "FIELD_TYPE_ENUM",
		11: "FIELD_TYPE_IDENTITY",
		12: "FIELD_TYPE_IMAGE",
	}
	FieldType_value = map[string]int32{
		"FIELD_TYPE_UNKNOWN":      0,
		"FIELD_TYPE_STRING":       1,
		"FIELD_TYPE_BOOL":         2,
		"FIELD_TYPE_INT":          3,
		"FIELD_TYPE_TIMESTAMP":    4,
		"FIELD_TYPE_DATE":         5,
		"FIELD_TYPE_ID":           6,
		"FIELD_TYPE_RELATIONSHIP": 7,
		"FIELD_TYPE_CURRENCY":     8,
		"FIELD_TYPE_DATETIME":     9,
		"FIELD_TYPE_ENUM":         10,
		"FIELD_TYPE_IDENTITY":     11,
		"FIELD_TYPE_IMAGE":        12,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_schema_proto_enumTypes[4].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_proto_schema_proto_enumTypes[4]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{4}
}

type Schema struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Models []*Model `protobuf:"bytes,1,rep,name=models,proto3" json:"models,omitempty"`
	Roles  []*Role  `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	Apis   []*Api   `protobuf:"bytes,3,rep,name=apis,proto3" json:"apis,omitempty"`
	Enums  []*Enum  `protobuf:"bytes,4,rep,name=enums,proto3" json:"enums,omitempty"`
}

func (x *Schema) Reset() {
	*x = Schema{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schema_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schema_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{0}
}

func (x *Schema) GetModels() []*Model {
	if x != nil {
		return x.Models
	}
	return nil
}

func (x *Schema) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Schema) GetApis() []*Api {
	if x != nil {
		return x.Apis
	}
	return nil
}

func (x *Schema) GetEnums() []*Enum {
	if x != nil {
		return x.Enums
	}
	return nil
}

type Model struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the model. Must be in PascalCase and be unique within the schema.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The fields this model contains
	Fields []*Field `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	// The operations this model defines. Contains both operations that will be auto
	// generated and also custom functions
	Operations  []*Operation      `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
	Permissions []*PermissionRule `protobuf:"bytes,4,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *Model) Reset() {
	*x = Model{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schema_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Model) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Model) ProtoMessage() {}

func (x *Model) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schema_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Model.ProtoReflect.Descriptor instead.
func (*Model) Descriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{1}
}

func (x *Model) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Model) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Model) GetOperations() []*Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *Model) GetPermissions() []*PermissionRule {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the model this field belongs to.
	ModelName string `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	// The name of the field. Must be in lowerCamelCase and be unique within the model.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The type of the field.
	Type FieldType `protobuf:"varint,3,opt,name=type,proto3,enum=proto.FieldType" json:"type,omitempty"`
	// If true then this field is allowed to be null
	Optional bool `protobuf:"varint,4,opt,name=optional,proto3" json:"optional,omitempty"`
	// If true then this field will have a unique constraint added to it meaning
	// a given value can only exist in a single row.
	// Cannot be true if `repeated` is true
	Unique bool `protobuf:"varint,5,opt,name=unique,proto3" json:"unique,omitempty"`
	// If true then this field can contain multiple values.
	// Cannot be true if `unique` is true.
	Repeated bool `protobuf:"varint,6,opt,name=repeated,proto3" json:"repeated,omitempty"`
	// Primary key for this field.
	PrimaryKey bool `protobuf:"varint,7,opt,name=primary_key,json=primaryKey,proto3" json:"primary_key,omitempty"`
	// If `type` is set to FIELD_TYPE_ENUM then this value is the name of the
	// the enum that the type refers to.
	EnumName *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=enum_name,json=enumName,proto3" json:"enum_name,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schema_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schema_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{2}
}

func (x *Field) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *Field) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Field) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_FIELD_TYPE_UNKNOWN
}

func (x *Field) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

func (x *Field) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *Field) GetRepeated() bool {
	if x != nil {
		return x.Repeated
	}
	return false
}

func (x *Field) GetPrimaryKey() bool {
	if x != nil {
		return x.PrimaryKey
	}
	return false
}

func (x *Field) GetEnumName() *wrapperspb.StringValue {
	if x != nil {
		return x.EnumName
	}
	return nil
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the model this operation belongs to.
	ModelName string `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	// The name of the operation. Must be in lowerCamelCase and be unique across all operations
	// across all models within the schema. This is because in both RPC and GraphQL operations
	// are top-level and so two different models can't both define an operation with the same name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The type of this operation.
	Type OperationType `protobuf:"varint,3,opt,name=type,proto3,enum=proto.OperationType" json:"type,omitempty"`
	// Whether this operation will be auto-generated by Keel or implemented with a custom function.
	Implementation OperationImplementation `protobuf:"varint,4,opt,name=implementation,proto3,enum=proto.OperationImplementation" json:"implementation,omitempty"`
	// The inputs this operation accepts.
	Inputs []*OperationInput `protobuf:"bytes,5,rep,name=inputs,proto3" json:"inputs,omitempty"`
	// A list of permission rules to apply to this operation
	Permissions []*PermissionRule `protobuf:"bytes,6,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// A list of assignment expression to be executed as part of this operation.
	// Only valid in `type` is OPERATION_TYPE_CREATE or OPERATION_TYPE_UPDATE
	SetExpressions []*Expression `protobuf:"bytes,7,rep,name=set_expressions,json=setExpressions,proto3" json:"set_expressions,omitempty"`
	// A list of logical expressions to be applied to the database query being
	// executed as part of the operation.
	// Not valid if `type` is OPERATION_TYPE_CREATE
	// If there are multiple entries in this field they are AND'd.
	WhereExpressions []*Expression `protobuf:"bytes,8,rep,name=where_expressions,json=whereExpressions,proto3" json:"where_expressions,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schema_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schema_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{3}
}

func (x *Operation) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *Operation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Operation) GetType() OperationType {
	if x != nil {
		return x.Type
	}
	return OperationType_OPERATION_TYPE_UNKNOWN
}

func (x *Operation) GetImplementation() OperationImplementation {
	if x != nil {
		return x.Implementation
	}
	return OperationImplementation_OPERATION_IMPLEMENTATION_UNKNOWN
}

func (x *Operation) GetInputs() []*OperationInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Operation) GetPermissions() []*PermissionRule {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *Operation) GetSetExpressions() []*Expression {
	if x != nil {
		return x.SetExpressions
	}
	return nil
}

func (x *Operation) GetWhereExpressions() []*Expression {
	if x != nil {
		return x.WhereExpressions
	}
	return nil
}

type OperationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the input. Must be lowerCamelCase and unique within the parent operation.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The type of this input. If type is OPERATION_INPUT_TYPE_FIELD then `model_name` and `field_name`
	// must also be populated.
	Type OperationInputType `protobuf:"varint,2,opt,name=type,proto3,enum=proto.OperationInputType" json:"type,omitempty"`
	// Set to true if this input field should accept a list of values. Only applies if `type` is not
	// set to OPERATION_INPUT_TYPE_FIELD
	Repeated bool `protobuf:"varint,3,opt,name=repeated,proto3" json:"repeated,omitempty"`
	// Set to true if this input field is optional. Only applies if `type` is not
	// set to OPERATION_INPUT_TYPE_FIELD
	Optional bool `protobuf:"varint,4,opt,name=optional,proto3" json:"optional,omitempty"`
	// The name of the model this input field is referring to. Should only be set if `type` is
	// set to OPERATION_INPUT_TYPE_FIELD
	ModelName *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	// The name of the field inside `model_name` that this input type refers to. Should only
	// be set if `type` is set to OPERATION_INPUT_TYPE_FIELD
	FieldName *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
}

func (x *OperationInput) Reset() {
	*x = OperationInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schema_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationInput) ProtoMessage() {}

func (x *OperationInput) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schema_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationInput.ProtoReflect.Descriptor instead.
func (*OperationInput) Descriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{4}
}

func (x *OperationInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OperationInput) GetType() OperationInputType {
	if x != nil {
		return x.Type
	}
	return OperationInputType_OPERATION_INPUT_TYPE_UNKNOWN
}

func (x *OperationInput) GetRepeated() bool {
	if x != nil {
		return x.Repeated
	}
	return false
}

func (x *OperationInput) GetOptional() bool {
	if x != nil {
		return x.Optional
	}
	return false
}

func (x *OperationInput) GetModelName() *wrapperspb.StringValue {
	if x != nil {
		return x.ModelName
	}
	return nil
}

func (x *OperationInput) GetFieldName() *wrapperspb.StringValue {
	if x != nil {
		return x.FieldName
	}
	return nil
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the role
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A list of domains to match for this role e.g. myorg.com
	Domains []string `protobuf:"bytes,2,rep,name=domains,proto3" json:"domains,omitempty"`
	// A list of specific email addresses to match for this role eg. sarah@myorg.com
	Emails []string `protobuf:"bytes,3,rep,name=emails,proto3" json:"emails,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schema_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schema_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{5}
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *Role) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

type PermissionRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the model this permission rule applies to
	ModelName string `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	// Name of the specific operation this permission rule applies to.
	// If this field is populated then `operations_types` is ignored.
	OperationName *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`
	// A name of a Role that has been defined in the schema.
	// Cannot be provided if `expression` is provided.
	RoleNames []string `protobuf:"bytes,3,rep,name=role_names,json=roleNames,proto3" json:"role_names,omitempty"`
	// An expression to evaluate at runtime.
	// Cannot be provided if `role_name` is provided.
	Expression *Expression `protobuf:"bytes,4,opt,name=expression,proto3" json:"expression,omitempty"`
	// A list of operation types that this permission rule applies to
	// Should not be set if `operation_name` is provided.
	OperationsTypes []OperationType `protobuf:"varint,5,rep,packed,name=operations_types,json=operationsTypes,proto3,enum=proto.OperationType" json:"operations_types,omitempty"`
}

func (x *PermissionRule) Reset() {
	*x = PermissionRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schema_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionRule) ProtoMessage() {}

func (x *PermissionRule) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schema_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionRule.ProtoReflect.Descriptor instead.
func (*PermissionRule) Descriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{6}
}

func (x *PermissionRule) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *PermissionRule) GetOperationName() *wrapperspb.StringValue {
	if x != nil {
		return x.OperationName
	}
	return nil
}

func (x *PermissionRule) GetRoleNames() []string {
	if x != nil {
		return x.RoleNames
	}
	return nil
}

func (x *PermissionRule) GetExpression() *Expression {
	if x != nil {
		return x.Expression
	}
	return nil
}

func (x *PermissionRule) GetOperationsTypes() []OperationType {
	if x != nil {
		return x.OperationsTypes
	}
	return nil
}

type Expression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *Expression) Reset() {
	*x = Expression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schema_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Expression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Expression) ProtoMessage() {}

func (x *Expression) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schema_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Expression.ProtoReflect.Descriptor instead.
func (*Expression) Descriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{7}
}

func (x *Expression) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type Api struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type      ApiType     `protobuf:"varint,2,opt,name=type,proto3,enum=proto.ApiType" json:"type,omitempty"`
	ApiModels []*ApiModel `protobuf:"bytes,3,rep,name=api_models,json=apiModels,proto3" json:"api_models,omitempty"`
}

func (x *Api) Reset() {
	*x = Api{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schema_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Api) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Api) ProtoMessage() {}

func (x *Api) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schema_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Api.ProtoReflect.Descriptor instead.
func (*Api) Descriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{8}
}

func (x *Api) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Api) GetType() ApiType {
	if x != nil {
		return x.Type
	}
	return ApiType_API_TYPE_UNKNOWN
}

func (x *Api) GetApiModels() []*ApiModel {
	if x != nil {
		return x.ApiModels
	}
	return nil
}

type ApiModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelName string `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
}

func (x *ApiModel) Reset() {
	*x = ApiModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schema_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiModel) ProtoMessage() {}

func (x *ApiModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schema_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiModel.ProtoReflect.Descriptor instead.
func (*ApiModel) Descriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{9}
}

func (x *ApiModel) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

type Enum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Values []*EnumValue `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Enum) Reset() {
	*x = Enum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schema_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enum) ProtoMessage() {}

func (x *Enum) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schema_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enum.ProtoReflect.Descriptor instead.
func (*Enum) Descriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{10}
}

func (x *Enum) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Enum) GetValues() []*EnumValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type EnumValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *EnumValue) Reset() {
	*x = EnumValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_schema_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValue) ProtoMessage() {}

func (x *EnumValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_schema_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValue.ProtoReflect.Descriptor instead.
func (*EnumValue) Descriptor() ([]byte, []int) {
	return file_proto_schema_proto_rawDescGZIP(), []int{11}
}

func (x *EnumValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_proto_schema_proto protoreflect.FileDescriptor

var file_proto_schema_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x06,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x24, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12,
	0x1e, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x52, 0x04, 0x61, 0x70, 0x69, 0x73, 0x12,
	0x21, 0x0a, 0x05, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x05, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x8c, 0x02, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x09, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x65, 0x6e, 0x75, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x94, 0x03, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x12, 0x37, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x73,
	0x65, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x11, 0x77, 0x68, 0x65, 0x72, 0x65,
	0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x77, 0x68, 0x65, 0x72, 0x65, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x85, 0x02, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x4c, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x87, 0x02,
	0x0a, 0x0e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x43, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x6d, 0x0a,
	0x03, 0x41, 0x70, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x70, 0x69, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x0a,
	0x61, 0x70, 0x69, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x09, 0x61, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0x29, 0x0a, 0x08,
	0x41, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x04, 0x45, 0x6e, 0x75, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x75, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x1f, 0x0a,
	0x09, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x2a, 0x47,
	0x0a, 0x07, 0x41, 0x70, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x50, 0x49,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x41, 0x50, 0x49, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x52, 0x41, 0x50,
	0x48, 0x51, 0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x50, 0x49, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x52, 0x50, 0x43, 0x10, 0x02, 0x2a, 0x96, 0x01, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x1c, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x50, 0x55,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x1e, 0x0a, 0x1a, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x10, 0x01,
	0x12, 0x1f, 0x0a, 0x1b, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10,
	0x02, 0x12, 0x1d, 0x0a, 0x19, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x03,
	0x2a, 0x87, 0x01, 0x0a, 0x17, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d,
	0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x20,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d,
	0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41,
	0x55, 0x54, 0x4f, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x2a, 0xad, 0x01, 0x0a, 0x0d, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x54, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49,
	0x53, 0x54, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12,
	0x19, 0x0a, 0x15, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x05, 0x2a, 0xb8, 0x02, 0x0a, 0x09, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x49, 0x45, 0x4c, 0x44,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e,
	0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x10, 0x03,
	0x12, 0x18, 0x0a, 0x14, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x49,
	0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12,
	0x11, 0x0a, 0x0d, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x44,
	0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x45, 0x4c, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x48, 0x49, 0x50, 0x10, 0x07, 0x12,
	0x17, 0x0a, 0x13, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x55,
	0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x10,
	0x09, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x45, 0x4e, 0x55, 0x4d, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x10, 0x0b, 0x12,
	0x14, 0x0a, 0x10, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d,
	0x41, 0x47, 0x45, 0x10, 0x0c, 0x42, 0x1b, 0x5a, 0x19, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x6b, 0x65, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_schema_proto_rawDescOnce sync.Once
	file_proto_schema_proto_rawDescData = file_proto_schema_proto_rawDesc
)

func file_proto_schema_proto_rawDescGZIP() []byte {
	file_proto_schema_proto_rawDescOnce.Do(func() {
		file_proto_schema_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_schema_proto_rawDescData)
	})
	return file_proto_schema_proto_rawDescData
}

var file_proto_schema_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_schema_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_schema_proto_goTypes = []interface{}{
	(ApiType)(0),                   // 0: proto.ApiType
	(OperationInputType)(0),        // 1: proto.OperationInputType
	(OperationImplementation)(0),   // 2: proto.OperationImplementation
	(OperationType)(0),             // 3: proto.OperationType
	(FieldType)(0),                 // 4: proto.FieldType
	(*Schema)(nil),                 // 5: proto.Schema
	(*Model)(nil),                  // 6: proto.Model
	(*Field)(nil),                  // 7: proto.Field
	(*Operation)(nil),              // 8: proto.Operation
	(*OperationInput)(nil),         // 9: proto.OperationInput
	(*Role)(nil),                   // 10: proto.Role
	(*PermissionRule)(nil),         // 11: proto.PermissionRule
	(*Expression)(nil),             // 12: proto.Expression
	(*Api)(nil),                    // 13: proto.Api
	(*ApiModel)(nil),               // 14: proto.ApiModel
	(*Enum)(nil),                   // 15: proto.Enum
	(*EnumValue)(nil),              // 16: proto.EnumValue
	(*wrapperspb.StringValue)(nil), // 17: google.protobuf.StringValue
}
var file_proto_schema_proto_depIdxs = []int32{
	6,  // 0: proto.Schema.models:type_name -> proto.Model
	10, // 1: proto.Schema.roles:type_name -> proto.Role
	13, // 2: proto.Schema.apis:type_name -> proto.Api
	15, // 3: proto.Schema.enums:type_name -> proto.Enum
	7,  // 4: proto.Model.fields:type_name -> proto.Field
	8,  // 5: proto.Model.operations:type_name -> proto.Operation
	11, // 6: proto.Model.permissions:type_name -> proto.PermissionRule
	4,  // 7: proto.Field.type:type_name -> proto.FieldType
	17, // 8: proto.Field.enum_name:type_name -> google.protobuf.StringValue
	3,  // 9: proto.Operation.type:type_name -> proto.OperationType
	2,  // 10: proto.Operation.implementation:type_name -> proto.OperationImplementation
	9,  // 11: proto.Operation.inputs:type_name -> proto.OperationInput
	11, // 12: proto.Operation.permissions:type_name -> proto.PermissionRule
	12, // 13: proto.Operation.set_expressions:type_name -> proto.Expression
	12, // 14: proto.Operation.where_expressions:type_name -> proto.Expression
	1,  // 15: proto.OperationInput.type:type_name -> proto.OperationInputType
	17, // 16: proto.OperationInput.model_name:type_name -> google.protobuf.StringValue
	17, // 17: proto.OperationInput.field_name:type_name -> google.protobuf.StringValue
	17, // 18: proto.PermissionRule.operation_name:type_name -> google.protobuf.StringValue
	12, // 19: proto.PermissionRule.expression:type_name -> proto.Expression
	3,  // 20: proto.PermissionRule.operations_types:type_name -> proto.OperationType
	0,  // 21: proto.Api.type:type_name -> proto.ApiType
	14, // 22: proto.Api.api_models:type_name -> proto.ApiModel
	16, // 23: proto.Enum.values:type_name -> proto.EnumValue
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_proto_schema_proto_init() }
func file_proto_schema_proto_init() {
	if File_proto_schema_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_schema_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schema); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schema_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Model); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schema_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schema_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schema_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schema_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schema_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schema_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Expression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schema_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Api); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schema_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schema_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_schema_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_schema_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_schema_proto_goTypes,
		DependencyIndexes: file_proto_schema_proto_depIdxs,
		EnumInfos:         file_proto_schema_proto_enumTypes,
		MessageInfos:      file_proto_schema_proto_msgTypes,
	}.Build()
	File_proto_schema_proto = out.File
	file_proto_schema_proto_rawDesc = nil
	file_proto_schema_proto_goTypes = nil
	file_proto_schema_proto_depIdxs = nil
}
