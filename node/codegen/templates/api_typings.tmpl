
export declare type {{ .Name }}Query = Partial<{
  {{ .QueryConstraints }}
}>

export declare type {{ .Name }}UniqueFields = Partial<{
  {{ .UniqueFields }}
}>

export declare class {{ .Name }}Api {
  private readonly db;
  constructor();
  create: (inputs: Partial<Omit<{{ .Name }}, "id" | "createdAt" | "updatedAt">>) => Promise<FunctionCreateResponse<{{ .Name }}>>;
  where: (conditions: {{ .Name }}Query) => ChainableQuery<{{ .Name }}>;
  delete: (id: string) => Promise<FunctionDeleteResponse<{{ .Name }}>>;
  findOne: (query: {{ .Name }}UniqueFields) => Promise<FunctionGetResponse<{{ .Name }}>>;
  update: (id: string, inputs: Partial<Omit<{{ .Name }}, "id" | "createdAt" | "updatedAt">>) => Promise<FunctionUpdateResponse<{{ .Name }}>>;
  findMany: (query: {{ .Name }}Query) => Promise<FunctionListResponse<{{ .Name }}>>;
}
