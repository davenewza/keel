type Query {
  _health: Boolean
  inClassroom(input: InClassroomInput!): ClassroomPeople
}

type Mutation {
  authenticate(input: AuthenticateInput!): AuthenticateResponse
  requestPasswordReset(input: RequestPasswordResetInput!): RequestPasswordResetResponse
  resetPassword(input: ResetPasswordInput!): ResetPasswordResponse
}

input AuthenticateInput {
  createIfNotExists: Boolean
  emailPassword: EmailPasswordInput!
}

input EmailPasswordInput {
  email: String!
  password: String!
}

input InClassroomInput {
  classId: ID!
}

input RequestPasswordResetInput {
  email: String!
  redirectUrl: String!
}

input ResetPasswordInput {
  password: String!
  token: String!
}

type AuthenticateResponse {
  identityCreated: Boolean!
  token: String!
}

type ClassroomPeople {
  pupils: [Person]!
  substitute: Person
  teacher: Person!
}

type Person {
  createdAt: Timestamp!
  id: ID!
  name: String!
  updatedAt: Timestamp!
}

type RequestPasswordResetResponse {
  success: Boolean
}

type ResetPasswordResponse {
  success: Boolean
}

type Timestamp {
  formatted(format: String!): String!
  fromNow: String!
  iso8601: String!
  seconds: Int!
}

scalar Any

scalar ISO8601
