model Collection {
    fields {
        name Text
        books Book[]
    }

    actions {
        create createCollection() with (name, books.title, books.genres, books.author?) {
            @permission(expression: true)
        }

        create createCollectionSetGenres() with (name, books.title) {
            @set(collection.books.genres = [Genre.All, Genre.New])
            @permission(expression: true)
        }

        list listCollection(books.genres) {
            @orderBy(name: asc)
            @permission(expression: true)
        }

        list listEqualsCollection() {
            @where(collection.books.genres == [Genre.Fantasy, Genre.ScienceFiction])
            @orderBy(name: asc)
            @permission(expression: true)
        }

        list listInCollection(genre: Genre) {
            @where(genre in collection.books.genres)
            @orderBy(name: asc)
            @permission(expression: true)
        }

        list listNotInCollection(genre: Genre) {
            @where(!(genre in collection.books.genres))
            @orderBy(name: asc)
            @permission(expression: true)
        }

        list suggestedCollections() {
            @where(ctx.identity.person.favouriteGenre in collection.books.genres)
            @orderBy(name: asc)
            @permission(expression: true)
        }
    }
}

enum Genre {
    Fantasy
    ScienceFiction
    All
    New
    Thriller
    Science
    School
    Math
    EasyReads
}

model Book {
    fields {
        col Collection
        title Text
        genres Genre[]
        author Text?
    }

    actions {
        list suggestedBooksByGenre() {
            @where(ctx.identity.person.favouriteGenre in book.genres)
            @orderBy(title: asc)
            @permission(expression: true)
        }

        list suggestedBooksByAuthor() {
            @where(book.author in ctx.identity.person.favouriteAuthors)
            @orderBy(title: asc)
            @permission(expression: true)
        }
    }
}

model Person {
    fields {
        favouriteGenre Genre
        favouriteAuthors Text[]
        identity Identity @unique
    }
}