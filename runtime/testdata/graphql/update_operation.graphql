type Query {
  getPerson(input: GetPersonInput!): Person
}

type Mutation {
  authenticate(input: AuthenticateInput!): AuthenticateResponse
  updatePerson(input: UpdatePersonInput!): Person!
}

input AuthenticateEmailPasswordInput {
  email: String!
  password: String!
}

input AuthenticateInput {
  createIfNotExists: Boolean
  emailPassword: AuthenticateEmailPasswordInput!
}

input GetPersonInput {
  id: ID!
}

input UpdatePersonInput {
  values: UpdatePersonValuesInput!
  where: UpdatePersonQueryInput!
}

input UpdatePersonQueryInput {
  id: ID!
}

input UpdatePersonValuesInput {
  name: String!
}

type AuthenticateResponse {
  token: String
}

type Person {
  createdAt: Timestamp!
  id: ID!
  name: String!
  updatedAt: Timestamp!
}

type Timestamp {
  seconds: Int!
}
