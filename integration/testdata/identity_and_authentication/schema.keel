model Post {
    fields {
        title Text
        identity Identity?
        isAuthenticated Boolean?
        comments Comment[]
    }

    actions {
        create createPostWithIdentity() with (title) {
            @set(post.identity = ctx.identity)
            @permission(expression: true)
        }
        get getPostRequiresIdentity(id) {
            @permission(expression: ctx.identity == post.identity)
        }
        get getPostRequiresAuthentication(id) {
            @permission(expression: ctx.isAuthenticated)
        }
        get getPostRequiresNoAuthentication(id) {
            @permission(expression: ctx.isAuthenticated == false)
        }
        get getPostPublic(id) {
            @permission(expression: true)
        }
        create createPostSetIsAuthenticated() with (title) {
            @set(post.isAuthenticated = ctx.isAuthenticated)
            @permission(expression: true)
        }
    }
}

model Comment {
    fields {
        comment Text
        createdBy Identity
        isActive Boolean
        post Post
    }
}

model ChildPost {
    fields {
        post Post
    }

    actions {
        create createChild() with (post.id) {
            @permission(expression: childPost.post.identity == ctx.identity)
        }
    }
}

api Web {
    models {
        Post
        ChildPost
    }
}
