// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: tools.proto

package proto

import (
	proto "github.com/teamkeel/keel/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Capabilities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments bool `protobuf:"varint,1,opt,name=comments,proto3" json:"comments,omitempty"`
	Audit    bool `protobuf:"varint,2,opt,name=audit,proto3" json:"audit,omitempty"`
}

func (x *Capabilities) Reset() {
	*x = Capabilities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Capabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capabilities) ProtoMessage() {}

func (x *Capabilities) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capabilities.ProtoReflect.Descriptor instead.
func (*Capabilities) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{0}
}

func (x *Capabilities) GetComments() bool {
	if x != nil {
		return x.Comments
	}
	return false
}

func (x *Capabilities) GetAudit() bool {
	if x != nil {
		return x.Audit
	}
	return false
}

type ActionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier. For generated tools, the ID will be the same as the action's name.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Sentence case the action name e.g "Get order"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Skipped for auto generated tools
	Icon *string `protobuf:"bytes,3,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	// The action in the schema e.g "getOrder"
	ActionName string `protobuf:"bytes,4,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	// The names of the APIs in which this action sits
	ApiNames []string `protobuf:"bytes,5,rep,name=api_names,json=apiNames,proto3" json:"api_names,omitempty"`
	// The name of the model on which this tool operates on.
	ModelName      string                     `protobuf:"bytes,6,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	ActionType     proto.ActionType           `protobuf:"varint,7,opt,name=action_type,json=actionType,proto3,enum=proto.ActionType" json:"action_type,omitempty"`
	Implementation proto.ActionImplementation `protobuf:"varint,8,opt,name=implementation,proto3,enum=proto.ActionImplementation" json:"implementation,omitempty"`
	Inputs         []*RequestFieldConfig      `protobuf:"bytes,9,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Response       []*ResponseFieldConfig     `protobuf:"bytes,10,rep,name=response,proto3" json:"response,omitempty"`
	// Title of the tool.
	// Default value: a template with the first field of the model if it's a text field,
	// otherwise empty.
	Title *StringTemplate `protobuf:"bytes,11,opt,name=title,proto3,oneof" json:"title,omitempty"`
	// Template language support: markdown
	HelpText *StringTemplate `protobuf:"bytes,12,opt,name=help_text,json=helpText,proto3,oneof" json:"help_text,omitempty"`
	// The name of the entity associated with this tool, in a singular form (e.g. order, user).
	// The word is lowercased; for generated tools it is the name of the model
	EntitySingle string `protobuf:"bytes,13,opt,name=entity_single,json=entitySingle,proto3" json:"entity_single,omitempty"`
	// The name of the entity associated with this tool, in a plural form (e.g. orders, users).
	// The word is lowercased; for generated tools it is derived from name of the model
	EntityPlural string `protobuf:"bytes,14,opt,name=entity_plural,json=entityPlural,proto3" json:"entity_plural,omitempty"`
	// What features are enabled for this tool
	Capabilities *Capabilities `protobuf:"bytes,15,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	// Only for List actions; aka views.
	// E.g. For a listOrders action; these would be tabs that show filtered orders by status
	// (Processed, Pending, Completed)
	// For auto-generated configs, this is only populated for list actions, with links to other list
	// actions for the same model.
	RelatedActions []*ActionLink `protobuf:"bytes,16,rep,name=related_actions,json=relatedActions,proto3" json:"related_actions,omitempty"`
	// Only for List actions; Support offset and cursor
	Pagination *CursorPaginationConfig `protobuf:"bytes,17,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	// List of extenal links that will be displayed with this tool; used only for Get actions.
	// Nothing for auto generated
	Links []*ExternalLink `protobuf:"bytes,18,rep,name=links,proto3" json:"links,omitempty"`
	// Things you can do to this entry
	// All update, deletes, creates, read and write on the same model.
	// Only for List & Get; empty for mutations
	EntryActivityActions []*ActionLink `protobuf:"bytes,19,rep,name=entry_activity_actions,json=entryActivityActions,proto3" json:"entry_activity_actions,omitempty"`
	// Tools that will be displayed inline (embedded) withing the one that we're defining.
	EmbeddedActions []*ActionLink `protobuf:"bytes,20,rep,name=embedded_actions,json=embeddedActions,proto3" json:"embedded_actions,omitempty"`
	// The action to use to get an entry on this model. Default to a get action on the same model
	// Used for:
	// - fetching the record for prefilling a mutation
	// - the link for clicking a row in a List
	// - the action to call after a mutation
	GetEntryAction *ActionLink `protobuf:"bytes,21,opt,name=get_entry_action,json=getEntryAction,proto3,oneof" json:"get_entry_action,omitempty"`
}

func (x *ActionConfig) Reset() {
	*x = ActionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionConfig) ProtoMessage() {}

func (x *ActionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionConfig.ProtoReflect.Descriptor instead.
func (*ActionConfig) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{1}
}

func (x *ActionConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActionConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActionConfig) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *ActionConfig) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *ActionConfig) GetApiNames() []string {
	if x != nil {
		return x.ApiNames
	}
	return nil
}

func (x *ActionConfig) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *ActionConfig) GetActionType() proto.ActionType {
	if x != nil {
		return x.ActionType
	}
	return proto.ActionType(0)
}

func (x *ActionConfig) GetImplementation() proto.ActionImplementation {
	if x != nil {
		return x.Implementation
	}
	return proto.ActionImplementation(0)
}

func (x *ActionConfig) GetInputs() []*RequestFieldConfig {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ActionConfig) GetResponse() []*ResponseFieldConfig {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ActionConfig) GetTitle() *StringTemplate {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *ActionConfig) GetHelpText() *StringTemplate {
	if x != nil {
		return x.HelpText
	}
	return nil
}

func (x *ActionConfig) GetEntitySingle() string {
	if x != nil {
		return x.EntitySingle
	}
	return ""
}

func (x *ActionConfig) GetEntityPlural() string {
	if x != nil {
		return x.EntityPlural
	}
	return ""
}

func (x *ActionConfig) GetCapabilities() *Capabilities {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *ActionConfig) GetRelatedActions() []*ActionLink {
	if x != nil {
		return x.RelatedActions
	}
	return nil
}

func (x *ActionConfig) GetPagination() *CursorPaginationConfig {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ActionConfig) GetLinks() []*ExternalLink {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *ActionConfig) GetEntryActivityActions() []*ActionLink {
	if x != nil {
		return x.EntryActivityActions
	}
	return nil
}

func (x *ActionConfig) GetEmbeddedActions() []*ActionLink {
	if x != nil {
		return x.EmbeddedActions
	}
	return nil
}

func (x *ActionConfig) GetGetEntryAction() *ActionLink {
	if x != nil {
		return x.GetEntryAction
	}
	return nil
}

type RequestFieldConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// common fields
	FieldLocation *JsonPath       `protobuf:"bytes,2,opt,name=field_location,json=fieldLocation,proto3" json:"field_location,omitempty"`
	FieldType     proto.Type      `protobuf:"varint,3,opt,name=field_type,json=fieldType,proto3,enum=proto.Type" json:"field_type,omitempty"`
	Repeated      bool            `protobuf:"varint,4,opt,name=repeated,proto3" json:"repeated,omitempty"`
	DisplayName   string          `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	DisplayOrder  int32           `protobuf:"varint,6,opt,name=display_order,json=displayOrder,proto3" json:"display_order,omitempty"`
	Visible       bool            `protobuf:"varint,7,opt,name=visible,proto3" json:"visible,omitempty"`
	HelpText      *StringTemplate `protobuf:"bytes,8,opt,name=help_text,json=helpText,proto3,oneof" json:"help_text,omitempty"`
	// For a relation field - A list action with the fewest required inputs on the target model
	// Used to display a lookup/dropdown to allow selecting a entry for this field
	LookupAction *ActionLink `protobuf:"bytes,9,opt,name=lookup_action,json=lookupAction,proto3,oneof" json:"lookup_action,omitempty"`
	// For a relation field - Used for loading a preview
	GetEntryAction *ActionLink     `protobuf:"bytes,10,opt,name=get_entry_action,json=getEntryAction,proto3,oneof" json:"get_entry_action,omitempty"`
	Locked         bool            `protobuf:"varint,11,opt,name=locked,proto3" json:"locked,omitempty"`
	DefaultValue   *DefaultValue   `protobuf:"bytes,12,opt,name=default_value,json=defaultValue,proto3,oneof" json:"default_value,omitempty"`
	Placeholder    *StringTemplate `protobuf:"bytes,13,opt,name=placeholder,proto3,oneof" json:"placeholder,omitempty"`
}

func (x *RequestFieldConfig) Reset() {
	*x = RequestFieldConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestFieldConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestFieldConfig) ProtoMessage() {}

func (x *RequestFieldConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestFieldConfig.ProtoReflect.Descriptor instead.
func (*RequestFieldConfig) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{2}
}

func (x *RequestFieldConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestFieldConfig) GetFieldLocation() *JsonPath {
	if x != nil {
		return x.FieldLocation
	}
	return nil
}

func (x *RequestFieldConfig) GetFieldType() proto.Type {
	if x != nil {
		return x.FieldType
	}
	return proto.Type(0)
}

func (x *RequestFieldConfig) GetRepeated() bool {
	if x != nil {
		return x.Repeated
	}
	return false
}

func (x *RequestFieldConfig) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *RequestFieldConfig) GetDisplayOrder() int32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

func (x *RequestFieldConfig) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *RequestFieldConfig) GetHelpText() *StringTemplate {
	if x != nil {
		return x.HelpText
	}
	return nil
}

func (x *RequestFieldConfig) GetLookupAction() *ActionLink {
	if x != nil {
		return x.LookupAction
	}
	return nil
}

func (x *RequestFieldConfig) GetGetEntryAction() *ActionLink {
	if x != nil {
		return x.GetEntryAction
	}
	return nil
}

func (x *RequestFieldConfig) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *RequestFieldConfig) GetDefaultValue() *DefaultValue {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *RequestFieldConfig) GetPlaceholder() *StringTemplate {
	if x != nil {
		return x.Placeholder
	}
	return nil
}

type ResponseFieldConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FieldLocation *JsonPath  `protobuf:"bytes,2,opt,name=field_location,json=fieldLocation,proto3" json:"field_location,omitempty"`
	FieldType     proto.Type `protobuf:"varint,3,opt,name=field_type,json=fieldType,proto3,enum=proto.Type" json:"field_type,omitempty"`
	Repeated      bool       `protobuf:"varint,4,opt,name=repeated,proto3" json:"repeated,omitempty"`
	// default to sentence case
	DisplayName  string          `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	DisplayOrder int32           `protobuf:"varint,6,opt,name=display_order,json=displayOrder,proto3" json:"display_order,omitempty"`
	Visible      bool            `protobuf:"varint,7,opt,name=visible,proto3" json:"visible,omitempty"`
	HelpText     *StringTemplate `protobuf:"bytes,8,opt,name=help_text,json=helpText,proto3,oneof" json:"help_text,omitempty"`
	Sortable     bool            `protobuf:"varint,9,opt,name=sortable,proto3" json:"sortable,omitempty"` // Based on @sortable()
	// Set if this field is a FK and link to a get/list action on the target model
	Link *ActionLink `protobuf:"bytes,10,opt,name=link,proto3,oneof" json:"link,omitempty"`
	// for file fields only, display images inline
	ImagePreview bool `protobuf:"varint,11,opt,name=image_preview,json=imagePreview,proto3" json:"image_preview,omitempty"`
}

func (x *ResponseFieldConfig) Reset() {
	*x = ResponseFieldConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseFieldConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseFieldConfig) ProtoMessage() {}

func (x *ResponseFieldConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseFieldConfig.ProtoReflect.Descriptor instead.
func (*ResponseFieldConfig) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseFieldConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResponseFieldConfig) GetFieldLocation() *JsonPath {
	if x != nil {
		return x.FieldLocation
	}
	return nil
}

func (x *ResponseFieldConfig) GetFieldType() proto.Type {
	if x != nil {
		return x.FieldType
	}
	return proto.Type(0)
}

func (x *ResponseFieldConfig) GetRepeated() bool {
	if x != nil {
		return x.Repeated
	}
	return false
}

func (x *ResponseFieldConfig) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ResponseFieldConfig) GetDisplayOrder() int32 {
	if x != nil {
		return x.DisplayOrder
	}
	return 0
}

func (x *ResponseFieldConfig) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *ResponseFieldConfig) GetHelpText() *StringTemplate {
	if x != nil {
		return x.HelpText
	}
	return nil
}

func (x *ResponseFieldConfig) GetSortable() bool {
	if x != nil {
		return x.Sortable
	}
	return false
}

func (x *ResponseFieldConfig) GetLink() *ActionLink {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *ResponseFieldConfig) GetImagePreview() bool {
	if x != nil {
		return x.ImagePreview
	}
	return false
}

type DefaultValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*DefaultValue_String_
	//	*DefaultValue_Integer
	//	*DefaultValue_Float
	//	*DefaultValue_Bool
	Value isDefaultValue_Value `protobuf_oneof:"value"`
}

func (x *DefaultValue) Reset() {
	*x = DefaultValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultValue) ProtoMessage() {}

func (x *DefaultValue) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultValue.ProtoReflect.Descriptor instead.
func (*DefaultValue) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{4}
}

func (m *DefaultValue) GetValue() isDefaultValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *DefaultValue) GetString_() string {
	if x, ok := x.GetValue().(*DefaultValue_String_); ok {
		return x.String_
	}
	return ""
}

func (x *DefaultValue) GetInteger() int32 {
	if x, ok := x.GetValue().(*DefaultValue_Integer); ok {
		return x.Integer
	}
	return 0
}

func (x *DefaultValue) GetFloat() float32 {
	if x, ok := x.GetValue().(*DefaultValue_Float); ok {
		return x.Float
	}
	return 0
}

func (x *DefaultValue) GetBool() bool {
	if x, ok := x.GetValue().(*DefaultValue_Bool); ok {
		return x.Bool
	}
	return false
}

type isDefaultValue_Value interface {
	isDefaultValue_Value()
}

type DefaultValue_String_ struct {
	String_ string `protobuf:"bytes,1,opt,name=string,proto3,oneof"`
}

type DefaultValue_Integer struct {
	Integer int32 `protobuf:"varint,2,opt,name=integer,proto3,oneof"`
}

type DefaultValue_Float struct {
	Float float32 `protobuf:"fixed32,3,opt,name=float,proto3,oneof"`
}

type DefaultValue_Bool struct {
	Bool bool `protobuf:"varint,4,opt,name=bool,proto3,oneof"`
}

func (*DefaultValue_String_) isDefaultValue_Value() {}

func (*DefaultValue_Integer) isDefaultValue_Value() {}

func (*DefaultValue_Float) isDefaultValue_Value() {}

func (*DefaultValue_Bool) isDefaultValue_Value() {}

type StringTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// e.g. "{{$.firstName}} {{$.lastName}}" template syntax TBC.
	Template string `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	// If markdown is supported for this template. e.g.
	// Italic text: _{{$.Var}}_
	Markdown bool `protobuf:"varint,2,opt,name=markdown,proto3" json:"markdown,omitempty"`
}

func (x *StringTemplate) Reset() {
	*x = StringTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringTemplate) ProtoMessage() {}

func (x *StringTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringTemplate.ProtoReflect.Descriptor instead.
func (*StringTemplate) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{5}
}

func (x *StringTemplate) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *StringTemplate) GetMarkdown() bool {
	if x != nil {
		return x.Markdown
	}
	return false
}

type JsonPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *JsonPath) Reset() {
	*x = JsonPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonPath) ProtoMessage() {}

func (x *JsonPath) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonPath.ProtoReflect.Descriptor instead.
func (*JsonPath) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{6}
}

func (x *JsonPath) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ExternalLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label *StringTemplate `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Href  *StringTemplate `protobuf:"bytes,2,opt,name=href,proto3" json:"href,omitempty"`
	Icon  *string         `protobuf:"bytes,3,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
}

func (x *ExternalLink) Reset() {
	*x = ExternalLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalLink) ProtoMessage() {}

func (x *ExternalLink) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalLink.ProtoReflect.Descriptor instead.
func (*ExternalLink) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{7}
}

func (x *ExternalLink) GetLabel() *StringTemplate {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *ExternalLink) GetHref() *StringTemplate {
	if x != nil {
		return x.Href
	}
	return nil
}

func (x *ExternalLink) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

type ActionLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ToolId string `protobuf:"bytes,2,opt,name=tool_id,json=toolId,proto3" json:"tool_id,omitempty"`
	// The shape of this data is the input for the target action (i.e. 'where' and not 'values') but
	// with JSON paths for field values. Is a full  object tree
	// e.g.
	//
	//	{
	//		"where": {
	//			"id": "$.id" // JSON path on the current action repsonse. Can be recursive
	//		}
	//	}
	Data  []*DataMapping  `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Title *StringTemplate `protobuf:"bytes,4,opt,name=title,proto3,oneof" json:"title,omitempty"` // Empty by default
}

func (x *ActionLink) Reset() {
	*x = ActionLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionLink) ProtoMessage() {}

func (x *ActionLink) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionLink.ProtoReflect.Descriptor instead.
func (*ActionLink) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{8}
}

func (x *ActionLink) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActionLink) GetToolId() string {
	if x != nil {
		return x.ToolId
	}
	return ""
}

func (x *ActionLink) GetData() []*DataMapping {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ActionLink) GetTitle() *StringTemplate {
	if x != nil {
		return x.Title
	}
	return nil
}

type CursorPaginationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start      *CursorPaginationConfig_FieldConfig    `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End        *CursorPaginationConfig_FieldConfig    `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	PageSize   *CursorPaginationConfig_PageSizeConfig `protobuf:"bytes,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	NextPage   *JsonPath                              `protobuf:"bytes,4,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	TotalCount *JsonPath                              `protobuf:"bytes,5,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
}

func (x *CursorPaginationConfig) Reset() {
	*x = CursorPaginationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorPaginationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorPaginationConfig) ProtoMessage() {}

func (x *CursorPaginationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorPaginationConfig.ProtoReflect.Descriptor instead.
func (*CursorPaginationConfig) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{9}
}

func (x *CursorPaginationConfig) GetStart() *CursorPaginationConfig_FieldConfig {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *CursorPaginationConfig) GetEnd() *CursorPaginationConfig_FieldConfig {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *CursorPaginationConfig) GetPageSize() *CursorPaginationConfig_PageSizeConfig {
	if x != nil {
		return x.PageSize
	}
	return nil
}

func (x *CursorPaginationConfig) GetNextPage() *JsonPath {
	if x != nil {
		return x.NextPage
	}
	return nil
}

func (x *CursorPaginationConfig) GetTotalCount() *JsonPath {
	if x != nil {
		return x.TotalCount
	}
	return nil
}

type DataMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string         `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Path   *JsonPath      `protobuf:"bytes,2,opt,name=path,proto3,oneof" json:"path,omitempty"`
	Object []*DataMapping `protobuf:"bytes,3,rep,name=object,proto3" json:"object,omitempty"`
}

func (x *DataMapping) Reset() {
	*x = DataMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataMapping) ProtoMessage() {}

func (x *DataMapping) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataMapping.ProtoReflect.Descriptor instead.
func (*DataMapping) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{10}
}

func (x *DataMapping) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DataMapping) GetPath() *JsonPath {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *DataMapping) GetObject() []*DataMapping {
	if x != nil {
		return x.Object
	}
	return nil
}

// TBD
type CursorPaginationConfig_FieldConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestInput  string    `protobuf:"bytes,1,opt,name=request_input,json=requestInput,proto3" json:"request_input,omitempty"`
	ResponseField *JsonPath `protobuf:"bytes,2,opt,name=response_field,json=responseField,proto3" json:"response_field,omitempty"`
}

func (x *CursorPaginationConfig_FieldConfig) Reset() {
	*x = CursorPaginationConfig_FieldConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorPaginationConfig_FieldConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorPaginationConfig_FieldConfig) ProtoMessage() {}

func (x *CursorPaginationConfig_FieldConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorPaginationConfig_FieldConfig.ProtoReflect.Descriptor instead.
func (*CursorPaginationConfig_FieldConfig) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{9, 0}
}

func (x *CursorPaginationConfig_FieldConfig) GetRequestInput() string {
	if x != nil {
		return x.RequestInput
	}
	return ""
}

func (x *CursorPaginationConfig_FieldConfig) GetResponseField() *JsonPath {
	if x != nil {
		return x.ResponseField
	}
	return nil
}

type CursorPaginationConfig_PageSizeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestInput  string    `protobuf:"bytes,1,opt,name=request_input,json=requestInput,proto3" json:"request_input,omitempty"`
	ResponseField *JsonPath `protobuf:"bytes,2,opt,name=response_field,json=responseField,proto3" json:"response_field,omitempty"`
	DefaultValue  int32     `protobuf:"varint,3,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
}

func (x *CursorPaginationConfig_PageSizeConfig) Reset() {
	*x = CursorPaginationConfig_PageSizeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tools_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorPaginationConfig_PageSizeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorPaginationConfig_PageSizeConfig) ProtoMessage() {}

func (x *CursorPaginationConfig_PageSizeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_tools_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorPaginationConfig_PageSizeConfig.ProtoReflect.Descriptor instead.
func (*CursorPaginationConfig_PageSizeConfig) Descriptor() ([]byte, []int) {
	return file_tools_proto_rawDescGZIP(), []int{9, 1}
}

func (x *CursorPaginationConfig_PageSizeConfig) GetRequestInput() string {
	if x != nil {
		return x.RequestInput
	}
	return ""
}

func (x *CursorPaginationConfig_PageSizeConfig) GetResponseField() *JsonPath {
	if x != nil {
		return x.ResponseField
	}
	return nil
}

func (x *CursorPaginationConfig_PageSizeConfig) GetDefaultValue() int32 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

var File_tools_proto protoreflect.FileDescriptor

var file_tools_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x1a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x40, 0x0a, 0x0c, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x22, 0xb3, 0x08, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x69, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x70, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x01, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48,
	0x02, 0x52, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x6c,
	0x75, 0x72, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x50, 0x6c, 0x75, 0x72, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x3a, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x42, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x29, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x47, 0x0a, 0x16,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x14, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a, 0x10, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x0f, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b,
	0x48, 0x04, 0x52, 0x0e, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x65, 0x6c,
	0x70, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaa, 0x05, 0x0a, 0x12, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x36, 0x0a, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x6f, 0x6c,
	0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0d, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x0a, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x68, 0x65, 0x6c, 0x70, 0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0d,
	0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x01, 0x52, 0x0c, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x10, 0x67, 0x65, 0x74,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x02, 0x52, 0x0e, 0x67, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x12, 0x3d, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x6f,
	0x6c, 0x73, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48,
	0x03, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x04,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0xc4, 0x03, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x36, 0x0a, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e,
	0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x12, 0x37, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x68,
	0x65, 0x6c, 0x70, 0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6f,
	0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x6f,
	0x72, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x01, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x88,
	0x01, 0x01, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x65, 0x6c, 0x70,
	0x5f, 0x74, 0x65, 0x78, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x7b,
	0x0a, 0x0c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x04,
	0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f,
	0x6f, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x0e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72,
	0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x61, 0x72,
	0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x1e, 0x0a, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2b, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x04, 0x68, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x68, 0x72, 0x65, 0x66, 0x12, 0x17,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e,
	0x22, 0x99, 0x01, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x30, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xc2, 0x04, 0x0a,
	0x16, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x3b, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x49, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73,
	0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x2c, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x6a, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x36, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0d, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0x92, 0x01, 0x0a,
	0x0e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x36, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x0d, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x7e, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x28, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x06,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,
	0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x65, 0x61, 0x6d, 0x6b, 0x65, 0x65, 0x6c, 0x2f, 0x6b, 0x65, 0x65, 0x6c, 0x2f, 0x74, 0x6f,
	0x6f, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_tools_proto_rawDescOnce sync.Once
	file_tools_proto_rawDescData = file_tools_proto_rawDesc
)

func file_tools_proto_rawDescGZIP() []byte {
	file_tools_proto_rawDescOnce.Do(func() {
		file_tools_proto_rawDescData = protoimpl.X.CompressGZIP(file_tools_proto_rawDescData)
	})
	return file_tools_proto_rawDescData
}

var file_tools_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_tools_proto_goTypes = []interface{}{
	(*Capabilities)(nil),                          // 0: tools.Capabilities
	(*ActionConfig)(nil),                          // 1: tools.ActionConfig
	(*RequestFieldConfig)(nil),                    // 2: tools.RequestFieldConfig
	(*ResponseFieldConfig)(nil),                   // 3: tools.ResponseFieldConfig
	(*DefaultValue)(nil),                          // 4: tools.DefaultValue
	(*StringTemplate)(nil),                        // 5: tools.StringTemplate
	(*JsonPath)(nil),                              // 6: tools.JsonPath
	(*ExternalLink)(nil),                          // 7: tools.ExternalLink
	(*ActionLink)(nil),                            // 8: tools.ActionLink
	(*CursorPaginationConfig)(nil),                // 9: tools.CursorPaginationConfig
	(*DataMapping)(nil),                           // 10: tools.DataMapping
	(*CursorPaginationConfig_FieldConfig)(nil),    // 11: tools.CursorPaginationConfig.FieldConfig
	(*CursorPaginationConfig_PageSizeConfig)(nil), // 12: tools.CursorPaginationConfig.PageSizeConfig
	(proto.ActionType)(0),                         // 13: proto.ActionType
	(proto.ActionImplementation)(0),               // 14: proto.ActionImplementation
	(proto.Type)(0),                               // 15: proto.Type
}
var file_tools_proto_depIdxs = []int32{
	13, // 0: tools.ActionConfig.action_type:type_name -> proto.ActionType
	14, // 1: tools.ActionConfig.implementation:type_name -> proto.ActionImplementation
	2,  // 2: tools.ActionConfig.inputs:type_name -> tools.RequestFieldConfig
	3,  // 3: tools.ActionConfig.response:type_name -> tools.ResponseFieldConfig
	5,  // 4: tools.ActionConfig.title:type_name -> tools.StringTemplate
	5,  // 5: tools.ActionConfig.help_text:type_name -> tools.StringTemplate
	0,  // 6: tools.ActionConfig.capabilities:type_name -> tools.Capabilities
	8,  // 7: tools.ActionConfig.related_actions:type_name -> tools.ActionLink
	9,  // 8: tools.ActionConfig.pagination:type_name -> tools.CursorPaginationConfig
	7,  // 9: tools.ActionConfig.links:type_name -> tools.ExternalLink
	8,  // 10: tools.ActionConfig.entry_activity_actions:type_name -> tools.ActionLink
	8,  // 11: tools.ActionConfig.embedded_actions:type_name -> tools.ActionLink
	8,  // 12: tools.ActionConfig.get_entry_action:type_name -> tools.ActionLink
	6,  // 13: tools.RequestFieldConfig.field_location:type_name -> tools.JsonPath
	15, // 14: tools.RequestFieldConfig.field_type:type_name -> proto.Type
	5,  // 15: tools.RequestFieldConfig.help_text:type_name -> tools.StringTemplate
	8,  // 16: tools.RequestFieldConfig.lookup_action:type_name -> tools.ActionLink
	8,  // 17: tools.RequestFieldConfig.get_entry_action:type_name -> tools.ActionLink
	4,  // 18: tools.RequestFieldConfig.default_value:type_name -> tools.DefaultValue
	5,  // 19: tools.RequestFieldConfig.placeholder:type_name -> tools.StringTemplate
	6,  // 20: tools.ResponseFieldConfig.field_location:type_name -> tools.JsonPath
	15, // 21: tools.ResponseFieldConfig.field_type:type_name -> proto.Type
	5,  // 22: tools.ResponseFieldConfig.help_text:type_name -> tools.StringTemplate
	8,  // 23: tools.ResponseFieldConfig.link:type_name -> tools.ActionLink
	5,  // 24: tools.ExternalLink.label:type_name -> tools.StringTemplate
	5,  // 25: tools.ExternalLink.href:type_name -> tools.StringTemplate
	10, // 26: tools.ActionLink.data:type_name -> tools.DataMapping
	5,  // 27: tools.ActionLink.title:type_name -> tools.StringTemplate
	11, // 28: tools.CursorPaginationConfig.start:type_name -> tools.CursorPaginationConfig.FieldConfig
	11, // 29: tools.CursorPaginationConfig.end:type_name -> tools.CursorPaginationConfig.FieldConfig
	12, // 30: tools.CursorPaginationConfig.page_size:type_name -> tools.CursorPaginationConfig.PageSizeConfig
	6,  // 31: tools.CursorPaginationConfig.next_page:type_name -> tools.JsonPath
	6,  // 32: tools.CursorPaginationConfig.total_count:type_name -> tools.JsonPath
	6,  // 33: tools.DataMapping.path:type_name -> tools.JsonPath
	10, // 34: tools.DataMapping.object:type_name -> tools.DataMapping
	6,  // 35: tools.CursorPaginationConfig.FieldConfig.response_field:type_name -> tools.JsonPath
	6,  // 36: tools.CursorPaginationConfig.PageSizeConfig.response_field:type_name -> tools.JsonPath
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_tools_proto_init() }
func file_tools_proto_init() {
	if File_tools_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tools_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Capabilities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestFieldConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseFieldConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorPaginationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorPaginationConfig_FieldConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tools_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorPaginationConfig_PageSizeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tools_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_tools_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_tools_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_tools_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*DefaultValue_String_)(nil),
		(*DefaultValue_Integer)(nil),
		(*DefaultValue_Float)(nil),
		(*DefaultValue_Bool)(nil),
	}
	file_tools_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_tools_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_tools_proto_msgTypes[10].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tools_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tools_proto_goTypes,
		DependencyIndexes: file_tools_proto_depIdxs,
		MessageInfos:      file_tools_proto_msgTypes,
	}.Build()
	File_tools_proto = out.File
	file_tools_proto_rawDesc = nil
	file_tools_proto_goTypes = nil
	file_tools_proto_depIdxs = nil
}
