model Thing {
    fields {
        optionalNoDefault Number?
        optionalWithDefault Number? @default(1)
        requiredWithDefault Number @default(1)
    }
    operations {
        create createThingWithoutOptionalNoDefault()
        create createThingWithExplicitSetOnOptionalNoDefaultField() {
            @set(thing.optionalNoDefault = 99)
        }
        // create createThingWithNegativeOnOptionalNoDefaultField() {
        //     @set(thing.optionalNoDefault = -1)
        // }
        create createThingWithNullOnOptionalNoDefaultField() {
            @set(thing.optionalNoDefault = null)
        }
        create createThingWithoutOnOptionalWithDefaultField() 
        create createThingWithExplicitOnOptionaWithDefaultField()  {
            @set(thing.optionalWithDefault = 99)
        }
        // create createThingWithNegativeOnOptionalWithDefaultField() {
        //     @set(thing.optionalWithDefault = -1)
        // }
        create createThingWithNullOnOptionalWithDefaultField() {
            @set(thing.optionalWithDefault = null)
        }
        create createThingWithoutRequiredWithDefaultField() 
        create createThingWithExplicitOnRequiredWithDefaultField() {
            @set(thing.requiredWithDefault = 99)
        }
        // create createThingWithNegativeOnRequiredWithDefaultField() {
        //     @set(thing.requiredWithDefault = -1)
        // }
    }
}
api Test {
    @graphql
    models {
        Thing
    }
}