type Query {
  _health: Boolean
  getPerson(input: getPerson_input!): Person
}

type Mutation {
  authenticate(input: authenticate_input!): authenticate_response
  deletePerson(input: deletePerson_input!): DeleteResponse
}

input EmailPassword_input {
  email: String!
  password: String!
}

input authenticate_input {
  createIfNotExists: Boolean
  emailPassword: EmailPassword_input!
}

input deletePerson_input {
  id: ID!
}

input getPerson_input {
  id: ID!
}

type DeleteResponse {
  success: Boolean!
}

type Person {
  createdAt: Timestamp!
  id: ID!
  name: String!
  updatedAt: Timestamp!
}

type Timestamp {
  formatted(format: String!): String!
  fromNow: String!
  iso8601: String!
}

type authenticate_response {
  identityCreated: Boolean!
  token: String!
}

scalar Any

scalar ISO8601
