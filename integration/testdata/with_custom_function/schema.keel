model Person {
    fields {
        name Text
        gender Text
        niNumber Text @unique
        identity Identity?
        ctxNow Timestamp?
        slackId Text?
    }

    functions {
        get getPerson(id)
        get getPersonByNiNumber(niNumber)
        create createPerson() with (name, gender, niNumber, slackId?)
        create createPersonWithContextInfo() with (name, gender, niNumber)
        list listPeople(gender)
        delete deletePerson(id)
        update updatePerson(id) with (name, gender, niNumber)
        create createPersonWithEnvVar() with (name, gender, niNumber)
        create createPersonWithSecret() with (name, gender, niNumber)
        create customPermission() with (name, gender, niNumber)
    }

    @permission(
        expression: true,
        actions: [create, get, list, update, delete]
    )
}

model Profile {
    fields {
        person Person
    }

    functions {
        create createProfile() with (person.id)
        create createProfileWithNullPerson()
    }

    @permission(
        expression: true,
        actions: [create]
    )
}

model Publisher {
    fields {
        name Text
        authors Author[]
    }

    functions {
        get getPublisherByBook(bookId: ID)
    }
    
    @permission(
        expression: true,
        actions: [get]
    )
}

model Author {
    fields {
        name Text
        publisher Publisher?
        books Book[]
    }
}

model Book {
    fields {
        author Author
        title Text
    }

    functions {
        list listBooksByPublisherName(author.publisher.name)
    }

    @permission(
        expression: true,
        actions: [list]
    )
}

api Web {
    models {
        Person
    }
}
