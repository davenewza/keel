model UserExtension {
    fields {
        email Number
        isVerified Number
        signedUpAt Number
        issuer Number
        externalId Number
    }

    actions {
        create createExt() {
            //expect-error:18:58:E026:userExtension.email is Number and ctx.identity.email is Text
            @set(userExtension.email = ctx.identity.email)
            //expect-error:18:71:E026:userExtension.isVerified is Number and ctx.identity.emailVerified is Boolean
            @set(userExtension.isVerified = ctx.identity.emailVerified)
            //expect-error:18:67:E026:userExtension.signedUpAt is Number and ctx.identity.createdAt is Timestamp
            @set(userExtension.signedUpAt = ctx.identity.createdAt)
            //expect-error:18:60:E026:userExtension.issuer is Number and ctx.identity.issuer is Text
            @set(userExtension.issuer = ctx.identity.issuer)
            //expect-error:18:68:E026:userExtension.externalId is Number and ctx.identity.externalId is Text
            @set(userExtension.externalId = ctx.identity.externalId)
            @permission(expression: ctx.isAuthenticated)
        }
        update updateExt(id) {
            //expect-error:18:58:E026:userExtension.email is Number and ctx.identity.email is Text
            @set(userExtension.email = ctx.identity.email)
            //expect-error:18:71:E026:userExtension.isVerified is Number and ctx.identity.emailVerified is Boolean
            @set(userExtension.isVerified = ctx.identity.emailVerified)
            //expect-error:18:67:E026:userExtension.signedUpAt is Number and ctx.identity.createdAt is Timestamp
            @set(userExtension.signedUpAt = ctx.identity.createdAt)
            //expect-error:18:60:E026:userExtension.issuer is Number and ctx.identity.issuer is Text
            @set(userExtension.issuer = ctx.identity.issuer)
            //expect-error:18:68:E026:userExtension.externalId is Number and ctx.identity.externalId is Text
            @set(userExtension.externalId = ctx.identity.externalId)
            @permission(expression: ctx.isAuthenticated)
        }
    }
}
