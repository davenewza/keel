message CountResponse {
    count Number
}

message AdvancedSearchInput {
    contains Text?
    startsWith Text?
    endsWith Text?
}

message CreateManyInput {
    names Text[]
}

message PeopleInput {
    ids ID[]
}

message PeopleResponse {
    people Person[]
}

message CustomPersonSearchInput {
    params Any
}

message CustomPersonSearchResponse {
    people Any[]
}

message BulkPersonUpload {
    people Person[]
}

model Person {
    fields {
        name Text
    }

    actions {
        read countName(name) returns (CountResponse) {
            @permission(expression: true)
        }
        read countNameAdvanced(AdvancedSearchInput) returns (CountResponse) {
            @permission(expression: true)
        }
        write createAndCount(name) returns (CountResponse) {
            @permission(expression: true)
        }
        write createManyAndCount(CreateManyInput) returns (CountResponse) {
            @permission(expression: true)
        }
        read people(PeopleInput) returns (PeopleResponse) {
            @permission(expression: true)
        }
        read customPersonSearch(CustomPersonSearchInput) returns (CustomPersonSearchResponse) {
            @permission(expression: true)
        }
        read customSearch(Any) returns (Any) {
            @permission(expression: true)
        }
        write bulkPersonUpload(BulkPersonUpload) returns (BulkPersonUpload) {
            @permission(expression: true)
        }
        read noInputs() returns (Any) {
            @permission(expression: true)
        }
    }

    @permission(
        expression: true,
        actions: [create, get, list, update, delete]
    )
}

api Web {
    models {
        Person
    }
}