model Post {
    fields {
        title Text?
        views Number?
        active Boolean?
        identity Identity?

        titlePermissionMatch Text @default("hello")
        viewsPermissionMatch Number @default(1)
        activePermissionMatch Boolean @default(true)
    }

    operations {
        create createWithText() with (title)

        create createWithNumber() with (views)

        create createWithBoolean() with (active)

        create createWithIdentity() {
            @set(post.identity = ctx.identity)
        }

        get getWithTextPermissionLiteral(id) {
            @permission(expression: post.title == "hello")
        }

        get getWithNumberPermissionLiteral(id) {
            @permission(expression: post.views == 1)
        }

        get getWithBooleanPermissionLiteral(id) {
            @permission(expression: post.active == true)
        }

        get getWithTextPermissionFromField(id) {
            @permission(expression: post.title == post.titlePermissionMatch)
        }

        get getWithNumberPermissionFromField(id) {
            @permission(expression: post.views == post.viewsPermissionMatch)
        }

        get getWithBooleanPermissionFromField(id) {
            @permission(expression: post.active == post.activePermissionMatch)
        }

        get getWithIdentityPermission(id) {
            @permission(expression: post.identity == ctx.identity)
        }

        get getWithTrueValuePermission(id) {
            @permission(expression: true)
        }
    }
}

api Web {
    @graphql
    models {
        Post
    }
}