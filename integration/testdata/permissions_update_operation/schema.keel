model Post {
    fields {
        title Text?
        views Number?
        active Boolean?
        type PostType?
        identity Identity?
        titlePermissionMatch Text @default("hello")
        viewsPermissionMatch Number @default(1)
        activePermissionMatch Boolean @default(true)
        typePermissionMatch PostType @default(PostType.Technical)
    }

    actions {
        create createWithText() with (title)
        create createWithNumber() with (views)
        create createWithBoolean() with (active)
        create createWithEnum() with (type)
        create createWithIdentity() {
            @set(post.identity = ctx.identity)
        }
        update updateWithTextPermissionLiteral(id) with (title) {
            @permission(expression: post.title == "hello")
        }
        update updateWithNumberPermissionLiteral(id) with (views) {
            @permission(expression: post.views == 1)
        }
        update updateWithBooleanPermissionLiteral(id) with (active) {
            @permission(expression: post.active == true)
        }
        update updateWithEnumPermissionLiteral(id) with (type) {
            @permission(expression: post.type == PostType.Technical)
        }
        update updateWithTextPermissionFromField(id) with (title) {
            @permission(expression: post.title == post.titlePermissionMatch)
        }
        update updateWithNumberPermissionFromField(id) with (views) {
            @permission(expression: post.views == post.viewsPermissionMatch)
        }
        update updateWithBooleanPermissionFromField(id) with (active) {
            @permission(expression: post.active == post.activePermissionMatch)
        }
        update updateWithEnumPermissionFromField(id) with (type) {
            @permission(expression: post.type == post.typePermissionMatch)
        }
        update updateWithIdentityPermission(id) with (title) {
            @permission(expression: post.identity == ctx.identity)
        }
        update updateWithTrueValuePermission(id) with (title) {
            @permission(expression: true)
        }
    }

    @permission(
        expression: true,
        actions: [create]
    )
}

enum PostType {
    Technical
    Lifestyle
    Food
}

api Web {
    models {
        Post
    }
}
