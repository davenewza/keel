model Item {
    fields {
        product Product
        quantity Number
        total Decimal @computed(item.quantity * item.product.price + item.product.agent.commission)
    }
}

model Product {
    fields {
        price Decimal
        agent Agent
    }
}

model Agent {
    fields {
        commission Decimal
    }
}

===

model Item {
    fields {
        product Product
        quantity Number
        total Decimal @computed(item.quantity * item.product.price)
    }
}

model Product {
    fields {
        price Decimal
        agent Agent
    }
}

model Agent {
    fields {
        commission Decimal
    }
}

===

CREATE FUNCTION "item__total__5474c2e0__comp"(r "item") RETURNS NUMERIC AS $$ BEGIN
	RETURN r."quantity" * (SELECT "product"."price" FROM "product" WHERE "product"."id" IS NOT DISTINCT FROM r."product_id");
END; $$ LANGUAGE plpgsql;
DROP FUNCTION "item__total__8f543d38__comp";
CREATE OR REPLACE FUNCTION "item__exec_comp_fns"() RETURNS TRIGGER AS $$ BEGIN
	NEW.total := item__total__5474c2e0__comp(NEW);
	RETURN NEW;
END; $$ LANGUAGE plpgsql;
CREATE OR REPLACE TRIGGER "item__comp" BEFORE INSERT OR UPDATE ON "item" FOR EACH ROW EXECUTE PROCEDURE "item__exec_comp_fns"();
DROP TRIGGER IF EXISTS "agent__to__product__2eb4dbe9__comp_dep" ON "agent";
DROP TRIGGER IF EXISTS "agent__to__product__2eb4dbe9__comp_dep_update" ON "agent";
DROP FUNCTION IF EXISTS "agent__to__product__2eb4dbe9__comp_dep";
DROP TRIGGER IF EXISTS "product__to__item__2eb4dbe9__comp_dep" ON "product";
DROP TRIGGER IF EXISTS "product__to__item__2eb4dbe9__comp_dep_update" ON "product";
DROP FUNCTION IF EXISTS "product__to__item__2eb4dbe9__comp_dep";
UPDATE "item" SET id = id;

===

[
    {"Model":"Item","Field":"total","Type":"MODIFIED"}
]