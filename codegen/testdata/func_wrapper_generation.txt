model Post {
  fields {
    title Text
  }

  functions {
    create createPost() with(title)
    update updatePost(id) with(title)
    delete deletePost(id)
    list listPosts()
    get getPost(id)
  }
}

===

type CreatePostReturnType = Promise<FunctionCreateResponse<Post>>

type CreatePostCallbackFunction = (inputs: CreatePostInput, api: API) => CreatePostReturnType

export const CreatePost = (callback: CreatePostCallbackFunction) => (inputs: CreatePostInput, api: API) : CreatePostReturnType => {
  return callback(inputs, api);
};
type UpdatePostReturnType = Promise<FunctionUpdateResponse<Post>>

type UpdatePostCallbackFunction = (inputs: UpdatePostInput, api: API) => UpdatePostReturnType

export const UpdatePost = (callback: UpdatePostCallbackFunction) => (inputs: UpdatePostInput, api: API) : UpdatePostReturnType => {
  return callback(inputs, api);
};
declare type DeletePostReturnType = Promise<FunctionDeleteResponse<Post>>

type DeletePostCallbackFunction = (inputs: DeletePostInput, api: API) => DeletePostReturnType

export const DeletePost = (callback: DeletePostCallbackFunction) => (inputs: DeletePostInput, api: API) : DeletePostReturnType => {
  return callback(inputs, api);
};
type ListPostsReturnType = Promise<FunctionListResponse<Post>>

type ListPostsCallbackFunction = (inputs: ListPostsInput, api: API) => ListPostsReturnType

export const ListPosts = (callback: ListPostsCallbackFunction) => (inputs: ListPostsInput, api: API) : ListPostsReturnType => {
  return callback(inputs, api);
};
type GetPostReturnType = Promise<FunctionGetResponse<Post>>

type GetPostCallbackFunction = (inputs: GetPostInput, api: API) => GetPostReturnType

export const GetPost = (callback: GetPostCallbackFunction) => (inputs: GetPostInput, api: API) : GetPostReturnType => {
  return callback(inputs, api);
};
