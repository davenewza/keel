type Query {
  _health: Boolean
}

type Mutation {
  authenticate(input: AuthenticateInput!): AuthenticateResponse
  requestPasswordReset(input: RequestPasswordResetInput!): RequestPasswordResetResponse
  resetPassword(input: ResetPasswordInput!): ResetPasswordResponse
  writeSportInterests(input: Input!): Response
}

input AuthenticateInput {
  createIfNotExists: Boolean
  emailPassword: EmailPasswordInput!
}

input EmailPasswordInput {
  email: String!
  password: String!
}

input Input {
  favouriteSport: Sport
  sports: [Sport!]!
}

input RequestPasswordResetInput {
  email: String!
  redirectUrl: String!
}

input ResetPasswordInput {
  password: String!
  token: String!
}

type AuthenticateResponse {
  identityCreated: Boolean!
  token: String!
}

type RequestPasswordResetResponse {
  success: Boolean
}

type ResetPasswordResponse {
  success: Boolean
}

type Response {
  favouriteSport: Sport
  sports: [Sport]!
}

enum Sport {
  Cricket
  Rugby
  Soccer
}

scalar Any

scalar ISO8601
