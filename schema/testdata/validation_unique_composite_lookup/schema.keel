model User {
    fields {
        assignedProduct Product
        identity Identity @unique
    }
}

model Product {
    fields {
        name Text
        sku Text @unique
        stock ProductStock @unique
        supplierSku Text
        supplier Supplier
    }

    actions {
        get getBySupplierSku(supplierSku)
        get getBySupplierCode(supplier.supplierCode)
        get getBarcodeIsNull() {
            @where(product.stock.barcode == null)
        }
        get getBySupplierSkuExprAndNameExprMultiWhere(
            supplierSku: Text,
            name: Text,
        ) {
            @where(product.supplierSku == supplierSku)
            @where(product.supplier.name == name)
        }
        get getBySupplierId(supplierId: ID) {
            @where(product.supplier.id == supplierId)
        }
        get getBySupplierSkuOrId(supplierSku: Text, supplierId: ID) {
            @where(product.supplierSku == supplierSku or product.supplier.id == supplierId)
        }
        get getBySupplierSkuAndCodeOrShampoo(supplierSku: Text, supplierCode: Text) {
            @where(product.supplierSku == supplierSku and product.supplier.supplierCode == supplierCode or product.name == "Shampoo")
        }
        get getBySupplierSkuAndIdOrShampoo(supplierSku: Text, supplierId: ID) {
            @where(product.supplierSku == supplierSku and (product.supplier.id == supplierId or product.name == "Shampoo"))
        }
        get getBySupplierSkuAndCodeOrShampooParenthesis(
            supplierSku: Text,
            supplierCode: Text,
        ) {
            @where(product.supplierSku == supplierSku and (product.supplier.supplierCode == supplierCode or product.name == "Shampoo"))
        }
    }

    @unique([supplierSku, supplier])
}

model ProductStock {
    fields {
        barcode Text? @unique
        stockCount Number
        product Product
    }

    actions {
        get getBySupplierSkuAndName(product.supplierSku, product.supplier.name)
    }
}

model Supplier {
    fields {
        name Text
        supplierCode Text @unique
    }
}
