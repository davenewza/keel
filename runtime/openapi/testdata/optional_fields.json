{
	"openapi": "3.1.0",
	"info": {
		"title": "Web",
		"version": "1"
	},
	"paths": {
		"/web/json/authenticate": {
			"post": {
				"operationId": "authenticate",
				"requestBody": {
					"description": "authenticate Request",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"createIfNotExists": {
										"type": "boolean"
									},
									"emailPassword": {
										"$ref": "#/components/schemas/EmailPasswordInput"
									}
								},
								"additionalProperties": false,
								"required": ["emailPassword"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "authenticate Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"identityCreated": {
											"type": "boolean"
										},
										"token": {
											"type": "string"
										}
									},
									"additionalProperties": false,
									"required": ["identityCreated", "token"]
								}
							}
						}
					},
					"400": {
						"description": "authenticate Response Errors",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"data": {
											"type": ["object", "null"],
											"properties": {
												"errors": {
													"type": "array",
													"properties": {
														"error": {
															"type": "string"
														},
														"field": {
															"type": "string"
														}
													}
												}
											}
										},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/web/json/createCustomer": {
			"post": {
				"operationId": "createCustomer",
				"requestBody": {
					"description": "createCustomer Request",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"favouritePet": {
										"enum": ["Dog", "Cat", "Hamster"]
									},
									"leastFavoritePet": {
										"$ref": "#/components/schemas/NullablePetValue"
									},
									"name": {
										"type": "string"
									},
									"nickName": {
										"$ref": "#/components/schemas/NullableStringValue"
									}
								},
								"additionalProperties": false,
								"required": ["name", "nickName", "favouritePet", "leastFavoritePet"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "createCustomer Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Person"
								}
							}
						}
					},
					"400": {
						"description": "createCustomer Response Errors",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"data": {
											"type": ["object", "null"],
											"properties": {
												"errors": {
													"type": "array",
													"properties": {
														"error": {
															"type": "string"
														},
														"field": {
															"type": "string"
														}
													}
												}
											}
										},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/web/json/createCustomerOptionals": {
			"post": {
				"operationId": "createCustomerOptionals",
				"requestBody": {
					"description": "createCustomerOptionals Request",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"favouritePet": {
										"enum": ["Dog", "Cat", "Hamster"]
									},
									"leastFavoritePet": {
										"$ref": "#/components/schemas/NullablePetValue"
									},
									"name": {
										"type": "string"
									},
									"nickName": {
										"$ref": "#/components/schemas/NullableStringValue"
									}
								},
								"additionalProperties": false,
								"required": ["name", "favouritePet"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "createCustomerOptionals Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Person"
								}
							}
						}
					},
					"400": {
						"description": "createCustomerOptionals Response Errors",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"data": {
											"type": ["object", "null"],
											"properties": {
												"errors": {
													"type": "array",
													"properties": {
														"error": {
															"type": "string"
														},
														"field": {
															"type": "string"
														}
													}
												}
											}
										},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/web/json/customers": {
			"post": {
				"operationId": "customers",
				"requestBody": {
					"description": "customers Request",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"after": {
										"type": "string"
									},
									"before": {
										"type": "string"
									},
									"first": {
										"type": "number"
									},
									"last": {
										"type": "number"
									},
									"where": {
										"$ref": "#/components/schemas/CustomersWhere"
									}
								},
								"additionalProperties": false,
								"required": ["where"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "customers Response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"pageInfo": {
											"properties": {
												"count": {
													"type": "number"
												},
												"endCursor": {
													"type": "string"
												},
												"hasNextPage": {
													"type": "boolean"
												},
												"startCursor": {
													"type": "string"
												},
												"totalCount": {
													"type": "number"
												}
											}
										},
										"results": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Person"
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "customers Response Errors",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"data": {
											"type": ["object", "null"],
											"properties": {
												"errors": {
													"type": "array",
													"properties": {
														"error": {
															"type": "string"
														},
														"field": {
															"type": "string"
														}
													}
												}
											}
										},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/web/json/customersOptionals": {
			"post": {
				"operationId": "customersOptionals",
				"requestBody": {
					"description": "customersOptionals Request",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"after": {
										"type": "string"
									},
									"before": {
										"type": "string"
									},
									"first": {
										"type": "number"
									},
									"last": {
										"type": "number"
									},
									"where": {
										"$ref": "#/components/schemas/CustomersOptionalsWhere"
									}
								},
								"additionalProperties": false
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "customersOptionals Response",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"pageInfo": {
											"properties": {
												"count": {
													"type": "number"
												},
												"endCursor": {
													"type": "string"
												},
												"hasNextPage": {
													"type": "boolean"
												},
												"startCursor": {
													"type": "string"
												},
												"totalCount": {
													"type": "number"
												}
											}
										},
										"results": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/Person"
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "customersOptionals Response Errors",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"data": {
											"type": ["object", "null"],
											"properties": {
												"errors": {
													"type": "array",
													"properties": {
														"error": {
															"type": "string"
														},
														"field": {
															"type": "string"
														}
													}
												}
											}
										},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/web/json/groupedByNickName": {
			"post": {
				"operationId": "groupedByNickName",
				"requestBody": {
					"description": "groupedByNickName Request",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"nickName": {
										"$ref": "#/components/schemas/NullableStringValue"
									}
								},
								"additionalProperties": false
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "groupedByNickName Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"customer": {},
										"nickName": {
											"type": ["string", "null"]
										}
									},
									"additionalProperties": false
								}
							}
						}
					},
					"400": {
						"description": "groupedByNickName Response Errors",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"data": {
											"type": ["object", "null"],
											"properties": {
												"errors": {
													"type": "array",
													"properties": {
														"error": {
															"type": "string"
														},
														"field": {
															"type": "string"
														}
													}
												}
											}
										},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/web/json/requestPasswordReset": {
			"post": {
				"operationId": "requestPasswordReset",
				"requestBody": {
					"description": "requestPasswordReset Request",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string"
									},
									"redirectUrl": {
										"type": "string"
									}
								},
								"additionalProperties": false,
								"required": ["email", "redirectUrl"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "requestPasswordReset Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"additionalProperties": false
								}
							}
						}
					},
					"400": {
						"description": "requestPasswordReset Response Errors",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"data": {
											"type": ["object", "null"],
											"properties": {
												"errors": {
													"type": "array",
													"properties": {
														"error": {
															"type": "string"
														},
														"field": {
															"type": "string"
														}
													}
												}
											}
										},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/web/json/resetPassword": {
			"post": {
				"operationId": "resetPassword",
				"requestBody": {
					"description": "resetPassword Request",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"password": {
										"type": "string"
									},
									"token": {
										"type": "string"
									}
								},
								"additionalProperties": false,
								"required": ["token", "password"]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "resetPassword Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"additionalProperties": false
								}
							}
						}
					},
					"400": {
						"description": "resetPassword Response Errors",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"code": {
											"type": "string"
										},
										"data": {
											"type": ["object", "null"],
											"properties": {
												"errors": {
													"type": "array",
													"properties": {
														"error": {
															"type": "string"
														},
														"field": {
															"type": "string"
														}
													}
												}
											}
										},
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"CustomersOptionalsWhere": {
				"type": "object",
				"properties": {
					"favouritePet": {
						"$ref": "#/components/schemas/PetQueryInput"
					},
					"leastFavoritePet": {
						"$ref": "#/components/schemas/NullablePetQueryInput"
					},
					"name": {
						"$ref": "#/components/schemas/StringQueryInput"
					},
					"nickName": {
						"$ref": "#/components/schemas/NullableStringQueryInput"
					}
				},
				"additionalProperties": false
			},
			"CustomersWhere": {
				"type": "object",
				"properties": {
					"favouritePet": {
						"$ref": "#/components/schemas/PetQueryInput"
					},
					"leastFavoritePet": {
						"$ref": "#/components/schemas/NullablePetQueryInput"
					},
					"name": {
						"$ref": "#/components/schemas/StringQueryInput"
					},
					"nickName": {
						"$ref": "#/components/schemas/NullableStringQueryInput"
					}
				},
				"additionalProperties": false,
				"required": ["name", "nickName", "favouritePet", "leastFavoritePet"]
			},
			"EmailPasswordInput": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"additionalProperties": false,
				"required": ["email", "password"]
			},
			"NullablePetQueryInput": {
				"type": "object",
				"properties": {
					"equals": {
						"enum": ["Dog", "Cat", "Hamster"]
					},
					"isNull": {
						"type": "boolean"
					},
					"notEquals": {
						"enum": ["Dog", "Cat", "Hamster"]
					},
					"oneOf": {
						"type": "array",
						"items": {
							"enum": ["Dog", "Cat", "Hamster"]
						}
					}
				},
				"additionalProperties": false
			},
            "NullablePetValue": {
				"type": "object",
				"properties": {
					"isNull": {
						"type": "boolean"
					},
					"value": {
						"enum": ["Dog", "Cat", "Hamster"]
					}
				},
				"additionalProperties": false
			},
			"NullableStringQueryInput": {
				"type": "object",
				"properties": {
					"contains": {
						"type": "string"
					},
					"endsWith": {
						"type": "string"
					},
					"equals": {
						"type": "string"
					},
					"isNull": {
						"type": "boolean"
					},
					"notEquals": {
						"type": "string"
					},
					"oneOf": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"startsWith": {
						"type": "string"
					}
				},
				"additionalProperties": false
			},
            "NullableStringValue": {
				"type": "object",
				"properties": {
					"isNull": {
						"type": "boolean"
					},
					"value": {
						"type": "string"
					}
				},
				"additionalProperties": false
			},
			"Person": {
				"properties": {
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"favouritePet": {
						"enum": ["Dog", "Cat", "Hamster"]
					},
					"id": {
						"type": "string"
					},
					"leastFavoritePet": {
						"enum": ["Dog", "Cat", "Hamster", null]
					},
					"name": {
						"type": "string"
					},
					"nickName": {
						"type": ["string", "null"]
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": ["name", "favouritePet", "id", "createdAt", "updatedAt"]
			},
			"PetQueryInput": {
				"type": "object",
				"properties": {
					"equals": {
						"enum": ["Dog", "Cat", "Hamster"]
					},
					"notEquals": {
						"enum": ["Dog", "Cat", "Hamster"]
					},
					"oneOf": {
						"type": "array",
						"items": {
							"enum": ["Dog", "Cat", "Hamster"]
						}
					}
				},
				"additionalProperties": false
			},
			"StringQueryInput": {
				"type": "object",
				"properties": {
					"contains": {
						"type": "string"
					},
					"endsWith": {
						"type": "string"
					},
					"equals": {
						"type": "string"
					},
					"notEquals": {
						"type": "string"
					},
					"oneOf": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"startsWith": {
						"type": "string"
					}
				},
				"additionalProperties": false
			}
		}
	}
}