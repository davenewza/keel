type Query {
  _health: Boolean
}

type Mutation {
  createPerson(input: CreatePersonInput!): Person!
  createPersonAndCompany(input: CreatePersonAndCompanyInput!): Person!
}

input CreatePersonAndCompanyCompanyInput {
  name: String!
}

input CreatePersonAndCompanyInput {
  company: CreatePersonAndCompanyCompanyInput!
  name: String!
}

input CreatePersonCompanyInput {
  id: ID!
}

input CreatePersonInput {
  company: CreatePersonCompanyInput!
  name: String!
}

type Company {
  createdAt: Timestamp!
  id: ID!
  name: String!
  updatedAt: Timestamp!
}

type Person {
  company: Company!
  companyId: ID!
  createdAt: Timestamp!
  id: ID!
  name: String!
  updatedAt: Timestamp!
}

type Timestamp {
  formatted(format: String!): String!
  fromNow: String!
  iso8601: String!
  seconds: Int!
}

scalar Any

scalar ISO8601
