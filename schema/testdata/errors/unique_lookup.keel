model User {
    fields {
        assignedProduct Product
        identity Identity @unique
    }
}

model Product {
    fields {
        name Text
        sku Text @unique
    }

    actions {
        //expect-error:13:22:ActionInputError:The action 'getByName' can only get a single record and therefore must be filtered by unique fields
        get getByName(name)
        //expect-error:13:29:ActionInputError:The action 'getByNameAsInput' can only get a single record and therefore must be filtered by unique fields
        get getByNameAsInput(name: Text) {
            @where(product.name == name)
        }
        //expect-error:13:21:ActionInputError:The action 'getBySku' can only get a single record and therefore must be filtered by unique fields
        get getBySku(sku: Text) {
            @where(product.sku != sku)
        }
        //expect-error:13:30:ActionInputError:The action 'getBySkuOrShampoo' can only get a single record and therefore must be filtered by unique fields
        get getBySkuOrShampoo() {
            @where(product.sku == ctx.identity.user.assignedProduct.sku || product.name == "Shampoo")
        }
        //expect-error:13:34:ActionInputError:The action 'getBySkuOrIdOrShampoo' can only get a single record and therefore must be filtered by unique fields
        get getBySkuOrIdOrShampoo(productId: ID) {
            @where(product.sku == ctx.identity.user.assignedProduct.sku && product.id == productId || product.name == "Shampoo")
        }
    }
}
