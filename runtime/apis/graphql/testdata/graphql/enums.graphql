type Query {
  getPerson(input: getPerson_input!): Person
}

type Mutation {
  authenticate(input: authenticate_input!): authenticate_response
  createPerson(input: createPerson_input!): Person!
}

input EmailPassword_input {
  email: String!
  password: String!
}

input authenticate_input {
  createIfNotExists: Boolean
  emailPassword: EmailPassword_input!
}

input createPerson_input {
  occupation: Occupation!
}

input getPerson_input {
  id: ID!
}

type Person {
  createdAt: Timestamp!
  id: ID!
  occupation: Occupation!
  updatedAt: Timestamp!
}

type Timestamp {
  formatted(format: String!): String!
  fromNow: String!
  iso8601: String!
  seconds: Int!
}

type authenticate_response {
  identityCreated: Boolean!
  token: String!
}

enum Occupation {
  Astronaut
  Doctor
  Firefighter
  Teacher
}

scalar Any

scalar ISO8601
