message CountResponse {
    count Number
}

message AdvancedSearchInput {
    contains Text?
    startsWith Text?
    endsWith Text?
}

message CreateManyInput {
    names Text[]
}

message PeopleInput {
    ids ID[]
}

message PeopleResponse {
    people Person[]
}

message CustomPersonSearchInput {
    params Any
}

message CustomPersonSearchResponse {
    people Any[]
}

message BulkPersonUpload {
    people Person[]
}

model Person {
    fields {
        name Text
    }

    actions {
        read countName(name) returns (CountResponse)
        read countNameAdvanced(AdvancedSearchInput) returns (CountResponse)
        write createAndCount(name) returns (CountResponse)
        write createManyAndCount(CreateManyInput) returns (CountResponse)
        read people(PeopleInput) returns (PeopleResponse)
        read customPersonSearch(CustomPersonSearchInput) returns (CustomPersonSearchResponse)
        read customSearch(Any) returns (Any)
        write bulkPersonUpload(BulkPersonUpload) returns (BulkPersonUpload)
        read noInputs() returns (Any)
    }

    @permission(
        expression: true,
        actions: [create, get, list, update, delete]
    )
}

api Web {
    models {
        Person
    }
}