import { handleCustomFunction } from '@teamkeel/functions-runtime';
import { createServer } from "http";
import url from "url";

// Imports to custom functions
{{- range .Functions }}
import {{ .NameLowerCamel }} from '../functions/{{ .NameLowerCamel }}';
{{- end }}

const startRuntimeServer = ({ functions, api }) => {
  const listener = async (req, res) => {
    if (req.method === "POST") {
      const buffers = [];
      for await (const chunk of req) {
        buffers.push(chunk);
      }
      const data = Buffer.concat(buffers).toString();

      // jsonrpc-2.0 compliant payload
      const json = JSON.parse(data);

      const rpcResponse = await handleCustomFunction(json, config);
      
      res.statusCode = 200;
      res.setHeader('Content-Type', 'application/json');

      res.write(
        JSON.stringify(rpcResponse)
      );
    }

    res.end();
  };

  const server = createServer(listener);
  const port = (process.env.PORT && parseInt(process.env.PORT, 10)) || 3001;
  server.listen(port);
};

startRuntimeServer({
  functions: {
  {{- range .Functions }}
    {{ .NameLowerCamel }},
  {{- end }}
  },
  api: {
    models: {
    {{- range .Models }}
      {{ .NameLowerCamel }}: new {{ .ApiName }}(),
    {{- end }}
    }
  }
});
