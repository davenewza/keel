model Post {
    fields {
        title Text
        isActive Boolean
        theAuthor Author? @relation(thePosts)
        theReviewer Author? @relation(reviewedPosts)
    }

    actions {
        get getActivePost(id) {
            @where(post.theAuthor.thePublisher.isActive == true)
            @where(post.theAuthor.isActive == true)
            @where(post.isActive == true)
        }
        get getActivePostWithRhsField(id) {
            @where(post.theAuthor.thePublisher.isActive == post.theAuthor.thePublisher.booleanValue)
            @where(post.theAuthor.isActive == post.theAuthor.thePublisher.booleanValue)
            @where(post.isActive == post.theAuthor.thePublisher.booleanValue)
        }
        list listActivePosts() {
            @where(post.theAuthor.thePublisher.isActive == true)
            @where(post.theAuthor.isActive == true)
            @where(post.isActive == true)
        }
        list listActivePostsWithRhsField() {
            @where(post.theAuthor.thePublisher.isActive == post.theAuthor.thePublisher.booleanValue)
            @where(post.theAuthor.isActive == post.theAuthor.thePublisher.booleanValue)
            @where(post.isActive == post.theAuthor.thePublisher.booleanValue)
        }
        list listActivePostsWithRhsField2() {
            @where(post.theAuthor.thePublisher.isActive == post.theAuthor.thePublisher.booleanValue || post.theAuthor.isActive == post.theAuthor.thePublisher.booleanValue || post.isActive == post.theAuthor.thePublisher.booleanValue)
        }
        delete deleteActivePost(id) {
            @where(post.theAuthor.thePublisher.isActive == true)
            @where(post.theAuthor.isActive == true)
            @where(post.isActive == true)
        }
        get getPostModelsReferencedMoreThanOnce(id) {
            @where(true in post.theAuthor.thePublisher.theAuthors.thePosts.isActive)
        }
    }

    @permission(
        actions: [get, list, delete],
        expression: true
    )
}

model Author {
    fields {
        name Text
        isActive Boolean
        thePosts Post[]
        reviewedPosts Post[]
        thePublisher Publisher
    }

    actions {
        list listReviewerByPostId(reviewedPosts.id)
    }

    @permission(
        actions: [get, list],
        expression: true
    )
}

model Publisher {
    fields {
        orgName Text
        theAuthors Author[]
        isActive Boolean
        booleanValue Boolean?
    }

    actions {
        get getActivePublisherWithActivePosts(id) {
            @where(true in publisher.theAuthors.thePosts.isActive)
            @where(true in publisher.theAuthors.isActive)
            @where(publisher.isActive == true)
        }
        get getActivePublisherWithActivePostsWithRhsField(id) {
            @where(publisher.booleanValue in publisher.theAuthors.thePosts.isActive)
            @where(publisher.booleanValue in publisher.theAuthors.isActive)
            @where(publisher.isActive == publisher.booleanValue)
        }
        list listActivePublishersWithActivePosts() {
            @where(true in publisher.theAuthors.thePosts.isActive)
            @where(true in publisher.theAuthors.isActive)
            @where(publisher.isActive == true)
        }
        list listActivePublishersWithActivePostsWithRhsField() {
            @where(publisher.booleanValue in publisher.theAuthors.thePosts.isActive)
            @where(publisher.booleanValue in publisher.theAuthors.isActive)
            @where(publisher.isActive == publisher.booleanValue)
        }
        delete deleteActivePublisherWithActivePosts(id) {
            @where(true in publisher.theAuthors.thePosts.isActive)
            @where(true in publisher.theAuthors.isActive)
            @where(publisher.isActive == true)
        }
        list listPublishersModelsReferencedMoreThanOnce() {
            @where(true in publisher.theAuthors.thePosts.theAuthor.thePublisher.isActive)
        }
    }

    @permission(
        actions: [get, list, delete],
        expression: true
    )
}

api Web {
    models {
        Post
        Author
        Publisher
    }
}