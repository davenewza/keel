model Post {
  fields {
    title Text
    published Boolean
    author Author
  }
}

model Author {
  fields {
    name Text
    posts Post[]
  }
}

===

export interface API {
  models: {
    Post: PostApi
    Author: AuthorApi
  }
}

export interface PostApi {
  create: (inputs: Partial<Omit<Post, "id" | "createdAt" | "updatedAt">>) => Promise<Post>
  delete: (id: string) => Promise<boolean>
  find: (p: Partial<Post>) => Promise<Post>
  update: (id: string, inputs: Partial<Omit<Post, "id" | "createdAt" | "updatedAt">>) => Promise<Post>
  findMany: (p: Partial<Post>) => Promise<Post[]>
}

export interface AuthorApi {
  create: (inputs: Partial<Omit<Author, "id" | "createdAt" | "updatedAt">>) => Promise<Author>
  delete: (id: string) => Promise<boolean>
  find: (p: Partial<Author>) => Promise<Author>
  update: (id: string, inputs: Partial<Omit<Author, "id" | "createdAt" | "updatedAt">>) => Promise<Author>
  findMany: (p: Partial<Author>) => Promise<Author[]>
}
